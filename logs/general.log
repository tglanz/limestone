2020-05-26 20:34:26,700 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is 'SELECT'; result is false
2020-05-26 20:34:26,714 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is 'COUNT'; result is false
2020-05-26 20:34:26,714 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is '('; result is false
2020-05-26 20:34:26,715 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is '*'; result is false
2020-05-26 20:34:26,715 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is ''; result is false
2020-05-26 20:34:26,716 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is ')'; result is false
2020-05-26 20:34:26,716 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is ''; result is false
2020-05-26 20:34:26,716 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is 'FROM'; result is false
2020-05-26 20:34:26,717 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is '`NATION`'; result is false
2020-05-26 20:34:26,717 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is ''; result is false
2020-05-26 20:34:26,717 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is ''; result is false
2020-05-26 20:34:26,717 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is ''; result is false
2020-05-26 20:34:26,687 TRACE org.apache.calcite.sql.parser [main] After unconditional rewrite: SELECT COUNT(*)
FROM `NATION`
2020-05-26 20:34:26,757 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is 'SELECT'; result is false
2020-05-26 20:34:26,757 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is 'COUNT'; result is false
2020-05-26 20:34:26,757 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is '('; result is false
2020-05-26 20:34:26,757 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is '*'; result is false
2020-05-26 20:34:26,757 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is ''; result is false
2020-05-26 20:34:26,757 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is ')'; result is false
2020-05-26 20:34:26,757 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is ''; result is false
2020-05-26 20:34:26,757 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is 'FROM'; result is false
2020-05-26 20:34:26,758 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is '`adhoc`'; result is false
2020-05-26 20:34:26,758 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is '.'; result is false
2020-05-26 20:34:26,758 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is '`NATION`'; result is false
2020-05-26 20:34:26,758 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is ''; result is false
2020-05-26 20:34:26,758 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is 'AS'; result is false
2020-05-26 20:34:26,758 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is '`NATION`'; result is false
2020-05-26 20:34:26,758 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is ''; result is false
2020-05-26 20:34:26,758 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is ''; result is false
2020-05-26 20:34:26,758 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is ''; result is false
2020-05-26 20:34:26,758 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is ''; result is false
2020-05-26 20:34:26,756 TRACE org.apache.calcite.sql.parser [main] After validation: SELECT COUNT(*)
FROM `adhoc`.`NATION` AS `NATION`
2020-05-26 20:34:26,765 TRACE org.apache.calcite.plan.RelOptPlanner [main] new LogicalTableScan#0
2020-05-26 20:34:26,766 TRACE org.apache.calcite.plan.RelOptPlanner [main] new LogicalTableScan#1
2020-05-26 20:34:26,769 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is 'COUNT'; result is false
2020-05-26 20:34:26,769 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is '('; result is false
2020-05-26 20:34:26,770 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is '*'; result is false
2020-05-26 20:34:26,770 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is ''; result is false
2020-05-26 20:34:26,770 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is ')'; result is false
2020-05-26 20:34:26,771 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is 'COUNT'; result is false
2020-05-26 20:34:26,772 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is '('; result is false
2020-05-26 20:34:26,772 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is '*'; result is false
2020-05-26 20:34:26,772 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is ''; result is false
2020-05-26 20:34:26,772 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is ')'; result is false
2020-05-26 20:34:27,131 TRACE org.apache.calcite.plan.RelOptPlanner [main] new LogicalProject#2
2020-05-26 20:34:27,132 TRACE org.apache.calcite.plan.RelOptPlanner [main] new LogicalAggregate#3
2020-05-26 20:34:27,152 DEBUG org.apache.calcite.sql2rel [main] Plan after converting SqlNode to RelNode
LogicalAggregate(group=[{}], EXPR$0=[COUNT()])
  LogicalProject($f0=[0])
    LogicalTableScan(table=[[adhoc, NATION]])

2020-05-26 20:34:27,165 TRACE org.apache.calcite.plan.RelOptPlanner [main] new LogicalProject#4
2020-05-26 20:34:27,168 TRACE org.apache.calcite.plan.RelOptPlanner [main] new LogicalProject#5
2020-05-26 20:34:27,172 TRACE org.apache.calcite.plan.RelOptPlanner [main] new LogicalAggregate#6
2020-05-26 20:34:27,172 DEBUG org.apache.calcite.sql2rel [main] Plan after trimming unused fields
LogicalAggregate(group=[{}], EXPR$0=[COUNT()])
  LogicalTableScan(table=[[adhoc, NATION]])

2020-05-26 20:34:27,173 DEBUG org.apache.calcite.sql2rel [main] Plan after trimming unused fields
LogicalAggregate(group=[{}], EXPR$0=[COUNT()])
  LogicalTableScan(table=[[adhoc, NATION]])

2020-05-26 20:34:27,184 TRACE org.apache.calcite.plan.RelOptPlanner [main] new HepRelVertex#7
2020-05-26 20:34:27,185 TRACE org.apache.calcite.plan.RelOptPlanner [main] new LogicalAggregate#8
2020-05-26 20:34:27,185 TRACE org.apache.calcite.plan.RelOptPlanner [main] new HepRelVertex#9
2020-05-26 20:34:27,269 TRACE org.apache.calcite.plan.RelOptPlanner [main] 
Breadth-first from root:  {
    rel#9:HepRelVertex#9 = rel#8:LogicalAggregate.NONE.[](input=HepRelVertex#7,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={111.25 rows, 101.0 cpu, 0.0 io}
    rel#7:HepRelVertex#7 = rel#1:LogicalTableScan.NONE.[](table=[adhoc, NATION]), rowcount=100.0, cumulative cost={100.0 rows, 101.0 cpu, 0.0 io}
}
2020-05-26 20:34:27,270 TRACE org.apache.calcite.plan.RelOptPlanner [main] Applying rule set [SubQueryRemoveRule:Filter, SubQueryRemoveRule:Project, SubQueryRemoveRule:Join]
2020-05-26 20:34:27,270 TRACE org.apache.calcite.plan.RelOptPlanner [main] collecting garbage
2020-05-26 20:34:27,271 DEBUG org.apache.calcite.plan.RelOptPlanner [main] For final plan, using rel#8:LogicalAggregate.NONE.[](input=HepRelVertex#7,group={},EXPR$0=COUNT())
2020-05-26 20:34:27,271 DEBUG org.apache.calcite.plan.RelOptPlanner [main] For final plan, using rel#1:LogicalTableScan.NONE.[](table=[adhoc, NATION])
2020-05-26 20:34:27,272 TRACE org.apache.calcite.plan.RelOptPlanner [main] new LogicalProject#10
2020-05-26 20:34:27,273 TRACE org.apache.calcite.plan.RelOptPlanner [main] new LogicalProject#11
2020-05-26 20:34:27,273 TRACE org.apache.calcite.plan.RelOptPlanner [main] new LogicalAggregate#12
2020-05-26 20:34:27,273 DEBUG org.apache.calcite.sql2rel [main] Plan after trimming unused fields
LogicalAggregate(group=[{}], EXPR$0=[COUNT()])
  LogicalTableScan(table=[[adhoc, NATION]])

2020-05-26 20:34:27,277 TRACE org.apache.calcite.plan.RelOptPlanner [main] new RelSubset#13
2020-05-26 20:34:27,278 TRACE org.apache.calcite.plan.RelOptPlanner [main] Register rel#1:LogicalTableScan.NONE.[](table=[adhoc, NATION]) in rel#13:Subset#0.NONE.[]
2020-05-26 20:34:27,278 TRACE org.apache.calcite.plan.RelOptPlanner [main] Importance of [rel#13:Subset#0.NONE.[]] is 0.0
2020-05-26 20:34:27,282 TRACE org.apache.calcite.plan.RelOptPlanner [main] OPTIMIZE Rule-match queued: rule [EnumerableTableScanRule(in:NONE,out:ENUMERABLE)] rels [#1]
2020-05-26 20:34:27,283 TRACE org.apache.calcite.plan.RelOptPlanner [main] OPTIMIZE Rule-match queued: rule [BindableTableScanRule] rels [#1]
2020-05-26 20:34:27,283 TRACE org.apache.calcite.plan.RelOptPlanner [main] new LogicalAggregate#14
2020-05-26 20:34:27,283 TRACE org.apache.calcite.plan.RelOptPlanner [main] new RelSubset#15
2020-05-26 20:34:27,283 TRACE org.apache.calcite.plan.RelOptPlanner [main] Register rel#14:LogicalAggregate.NONE.[](input=RelSubset#13,group={},EXPR$0=COUNT()) in rel#15:Subset#1.NONE.[]
2020-05-26 20:34:27,284 TRACE org.apache.calcite.plan.RelOptPlanner [main] Importance of [rel#13:Subset#0.NONE.[]] to its parent [rel#15:Subset#1.NONE.[]] is 0.0 (parent importance=0.0, child cost=1.0E30, parent cost=1.0E30)
2020-05-26 20:34:27,284 TRACE org.apache.calcite.plan.RelOptPlanner [main] Importance of [rel#13:Subset#0.NONE.[]] is 0.0
2020-05-26 20:34:27,284 TRACE org.apache.calcite.plan.RelOptPlanner [main] Importance of [rel#15:Subset#1.NONE.[]] is 0.0
2020-05-26 20:34:27,284 TRACE org.apache.calcite.plan.RelOptPlanner [main] OPTIMIZE Rule-match queued: rule [AggregateExpandDistinctAggregatesRule] rels [#14]
2020-05-26 20:34:27,285 TRACE org.apache.calcite.plan.RelOptPlanner [main] OPTIMIZE Rule-match queued: rule [AggregatePullUpConstantsRule] rels [#14,#1]
2020-05-26 20:34:27,285 TRACE org.apache.calcite.plan.RelOptPlanner [main] OPTIMIZE Rule-match queued: rule [EnumerableAggregateRule(in:NONE,out:ENUMERABLE)] rels [#14]
2020-05-26 20:34:27,285 TRACE org.apache.calcite.plan.RelOptPlanner [main] Importance of [rel#15:Subset#1.NONE.[]] is 1.0
2020-05-26 20:34:27,285 TRACE org.apache.calcite.plan.RelOptPlanner [main] new LogicalAggregate#16
2020-05-26 20:34:27,285 TRACE org.apache.calcite.plan.RelOptPlanner [main] Register: rel#16 is equivalent to rel#14:LogicalAggregate.NONE.[](input=RelSubset#13,group={},EXPR$0=COUNT())
2020-05-26 20:34:27,286 TRACE org.apache.calcite.plan.RelOptPlanner [main] new RelSubset#17
2020-05-26 20:34:27,286 TRACE org.apache.calcite.plan.RelOptPlanner [main] new AbstractConverter#18
2020-05-26 20:34:27,287 TRACE org.apache.calcite.plan.RelOptPlanner [main] Register rel#18:AbstractConverter.ENUMERABLE.[](input=RelSubset#15,convention=ENUMERABLE,sort=[]) in rel#17:Subset#1.ENUMERABLE.[]
2020-05-26 20:34:27,287 TRACE org.apache.calcite.plan.RelOptPlanner [main] Importance of [rel#15:Subset#1.NONE.[]] to its parent [rel#17:Subset#1.ENUMERABLE.[]] is 0.495 (parent importance=0.5, child cost=1.0E30, parent cost=1.0E30)
2020-05-26 20:34:27,287 TRACE org.apache.calcite.plan.RelOptPlanner [main] Importance of [rel#15:Subset#1.NONE.[]] is 0.495
2020-05-26 20:34:27,287 TRACE org.apache.calcite.plan.RelOptPlanner [main] Importance of [rel#17:Subset#1.ENUMERABLE.[]] is 1.0
2020-05-26 20:34:27,287 TRACE org.apache.calcite.plan.RelOptPlanner [main] OPTIMIZE Rule-match queued: rule [ExpandConversionRule] rels [#18]
2020-05-26 20:34:27,309 DEBUG org.apache.calcite.plan.RelOptPlanner [main] PLANNER = org.apache.calcite.plan.volcano.VolcanoPlanner@5fe7f967; TICK = 1/1; PHASE = PRE_PROCESS_MDR; COST = {inf}
2020-05-26 20:34:27,332 TRACE org.apache.calcite.plan.RelOptPlanner [main] Root: rel#17:Subset#1.ENUMERABLE.[]
Original rel:
LogicalAggregate(group=[{}], EXPR$0=[COUNT()]): rowcount = 10.0, cumulative cost = {111.25 rows, 101.0 cpu, 0.0 io}, id = 12
  LogicalTableScan(table=[[adhoc, NATION]]): rowcount = 100.0, cumulative cost = {100.0 rows, 101.0 cpu, 0.0 io}, id = 1

Sets:
Set#0, type: RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)
	rel#13:Subset#0.NONE.[], best=null, importance=0.81
		rel#1:LogicalTableScan.NONE.[](table=[adhoc, NATION]), rowcount=100.0, cumulative cost={inf}
Set#1, type: RecordType(BIGINT EXPR$0)
	rel#15:Subset#1.NONE.[], best=null, importance=0.9
		rel#14:LogicalAggregate.NONE.[](input=RelSubset#13,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={inf}
	rel#17:Subset#1.ENUMERABLE.[], best=null, importance=1.0
		rel#18:AbstractConverter.ENUMERABLE.[](input=RelSubset#15,convention=ENUMERABLE,sort=[]), rowcount=10.0, cumulative cost={inf}

Graphviz:
digraph G {
	root [style=filled,label="Root"];
	subgraph cluster0{
		label="Set 0 RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)";
		rel1 [label="rel#1:LogicalTableScan\ntable=[adhoc, NATION]\nrows=100.0, cost={inf}",shape=box]
		subset13 [label="rel#13:Subset#0.NONE.[]"]
	}
	subgraph cluster1{
		label="Set 1 RecordType(BIGINT EXPR$0)";
		rel14 [label="rel#14:LogicalAggregate\ninput=RelSubset#13,group={},EXPR$0=COUNT()\nrows=10.0, cost={inf}",shape=box]
		rel18 [label="rel#18:AbstractConverter\ninput=RelSubset#15,convention=ENUMERABLE,sort=[]\nrows=10.0, cost={inf}",shape=box]
		subset15 [label="rel#15:Subset#1.NONE.[]"]
		subset17 [label="rel#17:Subset#1.ENUMERABLE.[]",color=red]
	}
	root -> subset17;
	subset13 -> rel1;
	subset15 -> rel14; rel14 -> subset13;
	subset17 -> rel18; rel18 -> subset15;
}Importances: { rel#17:Subset#1.ENUMERABLE.[]=1.0 rel#15:Subset#1.NONE.[]=0.9 rel#13:Subset#0.NONE.[]=0.81}

2020-05-26 20:34:27,332 DEBUG org.apache.calcite.plan.RelOptPlanner [main] PLANNER = org.apache.calcite.plan.volcano.VolcanoPlanner@5fe7f967; TICK = 2/1; PHASE = PRE_PROCESS; COST = {inf}
2020-05-26 20:34:27,410 TRACE org.apache.calcite.plan.RelOptPlanner [main] Root: rel#17:Subset#1.ENUMERABLE.[]
Original rel:
LogicalAggregate(group=[{}], EXPR$0=[COUNT()]): rowcount = 10.0, cumulative cost = {111.25 rows, 101.0 cpu, 0.0 io}, id = 12
  LogicalTableScan(table=[[adhoc, NATION]]): rowcount = 100.0, cumulative cost = {100.0 rows, 101.0 cpu, 0.0 io}, id = 1

Sets:
Set#0, type: RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)
	rel#13:Subset#0.NONE.[], best=null, importance=0.81
		rel#1:LogicalTableScan.NONE.[](table=[adhoc, NATION]), rowcount=100.0, cumulative cost={inf}
Set#1, type: RecordType(BIGINT EXPR$0)
	rel#15:Subset#1.NONE.[], best=null, importance=0.9
		rel#14:LogicalAggregate.NONE.[](input=RelSubset#13,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={inf}
	rel#17:Subset#1.ENUMERABLE.[], best=null, importance=1.0
		rel#18:AbstractConverter.ENUMERABLE.[](input=RelSubset#15,convention=ENUMERABLE,sort=[]), rowcount=10.0, cumulative cost={inf}

Graphviz:
digraph G {
	root [style=filled,label="Root"];
	subgraph cluster0{
		label="Set 0 RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)";
		rel1 [label="rel#1:LogicalTableScan\ntable=[adhoc, NATION]\nrows=100.0, cost={inf}",shape=box]
		subset13 [label="rel#13:Subset#0.NONE.[]"]
	}
	subgraph cluster1{
		label="Set 1 RecordType(BIGINT EXPR$0)";
		rel14 [label="rel#14:LogicalAggregate\ninput=RelSubset#13,group={},EXPR$0=COUNT()\nrows=10.0, cost={inf}",shape=box]
		rel18 [label="rel#18:AbstractConverter\ninput=RelSubset#15,convention=ENUMERABLE,sort=[]\nrows=10.0, cost={inf}",shape=box]
		subset15 [label="rel#15:Subset#1.NONE.[]"]
		subset17 [label="rel#17:Subset#1.ENUMERABLE.[]",color=red]
	}
	root -> subset17;
	subset13 -> rel1;
	subset15 -> rel14; rel14 -> subset13;
	subset17 -> rel18; rel18 -> subset15;
}Importances: { rel#17:Subset#1.ENUMERABLE.[]=1.0 rel#15:Subset#1.NONE.[]=0.9 rel#13:Subset#0.NONE.[]=0.81}

2020-05-26 20:34:27,411 DEBUG org.apache.calcite.plan.RelOptPlanner [main] PLANNER = org.apache.calcite.plan.volcano.VolcanoPlanner@5fe7f967; TICK = 3/1; PHASE = OPTIMIZE; COST = {inf}
2020-05-26 20:34:27,412 TRACE org.apache.calcite.plan.RelOptPlanner [main] Root: rel#17:Subset#1.ENUMERABLE.[]
Original rel:
LogicalAggregate(group=[{}], EXPR$0=[COUNT()]): rowcount = 10.0, cumulative cost = {111.25 rows, 101.0 cpu, 0.0 io}, id = 12
  LogicalTableScan(table=[[adhoc, NATION]]): rowcount = 100.0, cumulative cost = {100.0 rows, 101.0 cpu, 0.0 io}, id = 1

Sets:
Set#0, type: RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)
	rel#13:Subset#0.NONE.[], best=null, importance=0.81
		rel#1:LogicalTableScan.NONE.[](table=[adhoc, NATION]), rowcount=100.0, cumulative cost={inf}
Set#1, type: RecordType(BIGINT EXPR$0)
	rel#15:Subset#1.NONE.[], best=null, importance=0.9
		rel#14:LogicalAggregate.NONE.[](input=RelSubset#13,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={inf}
	rel#17:Subset#1.ENUMERABLE.[], best=null, importance=1.0
		rel#18:AbstractConverter.ENUMERABLE.[](input=RelSubset#15,convention=ENUMERABLE,sort=[]), rowcount=10.0, cumulative cost={inf}

Graphviz:
digraph G {
	root [style=filled,label="Root"];
	subgraph cluster0{
		label="Set 0 RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)";
		rel1 [label="rel#1:LogicalTableScan\ntable=[adhoc, NATION]\nrows=100.0, cost={inf}",shape=box]
		subset13 [label="rel#13:Subset#0.NONE.[]"]
	}
	subgraph cluster1{
		label="Set 1 RecordType(BIGINT EXPR$0)";
		rel14 [label="rel#14:LogicalAggregate\ninput=RelSubset#13,group={},EXPR$0=COUNT()\nrows=10.0, cost={inf}",shape=box]
		rel18 [label="rel#18:AbstractConverter\ninput=RelSubset#15,convention=ENUMERABLE,sort=[]\nrows=10.0, cost={inf}",shape=box]
		subset15 [label="rel#15:Subset#1.NONE.[]"]
		subset17 [label="rel#17:Subset#1.ENUMERABLE.[]",color=red]
	}
	root -> subset17;
	subset13 -> rel1;
	subset15 -> rel14; rel14 -> subset13;
	subset17 -> rel18; rel18 -> subset15;
}Importances: { rel#17:Subset#1.ENUMERABLE.[]=1.0 rel#15:Subset#1.NONE.[]=0.9 rel#13:Subset#0.NONE.[]=0.81}

2020-05-26 20:34:27,413 TRACE org.apache.calcite.plan.RelOptPlanner [main] Sorted rule queue:
rule [ExpandConversionRule] rels [#18] importance 1.0
rule [EnumerableAggregateRule(in:NONE,out:ENUMERABLE)] rels [#14] importance 1.0
rule [AggregatePullUpConstantsRule] rels [#14,#1] importance 0.9
rule [AggregateExpandDistinctAggregatesRule] rels [#14] importance 0.9
rule [BindableTableScanRule] rels [#1] importance 0.81
rule [EnumerableTableScanRule(in:NONE,out:ENUMERABLE)] rels [#1] importance 0.81
2020-05-26 20:34:27,413 DEBUG org.apache.calcite.plan.RelOptPlanner [main] Pop match: rule [ExpandConversionRule] rels [#18]
2020-05-26 20:34:27,413 DEBUG org.apache.calcite.plan.RelOptPlanner [main] call#65: Apply rule [ExpandConversionRule] to [rel#18:AbstractConverter.ENUMERABLE.[](input=RelSubset#15,convention=ENUMERABLE,sort=[])]
2020-05-26 20:34:27,414 DEBUG org.apache.calcite.plan.RelOptPlanner [main] call#65 generated 0 successors.
2020-05-26 20:34:27,414 DEBUG org.apache.calcite.plan.RelOptPlanner [main] PLANNER = org.apache.calcite.plan.volcano.VolcanoPlanner@5fe7f967; TICK = 4/2; PHASE = OPTIMIZE; COST = {inf}
2020-05-26 20:34:27,416 TRACE org.apache.calcite.plan.RelOptPlanner [main] Root: rel#17:Subset#1.ENUMERABLE.[]
Original rel:
LogicalAggregate(group=[{}], EXPR$0=[COUNT()]): rowcount = 10.0, cumulative cost = {111.25 rows, 101.0 cpu, 0.0 io}, id = 12
  LogicalTableScan(table=[[adhoc, NATION]]): rowcount = 100.0, cumulative cost = {100.0 rows, 101.0 cpu, 0.0 io}, id = 1

Sets:
Set#0, type: RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)
	rel#13:Subset#0.NONE.[], best=null, importance=0.81
		rel#1:LogicalTableScan.NONE.[](table=[adhoc, NATION]), rowcount=100.0, cumulative cost={inf}
Set#1, type: RecordType(BIGINT EXPR$0)
	rel#15:Subset#1.NONE.[], best=null, importance=0.9
		rel#14:LogicalAggregate.NONE.[](input=RelSubset#13,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={inf}
	rel#17:Subset#1.ENUMERABLE.[], best=null, importance=1.0
		rel#18:AbstractConverter.ENUMERABLE.[](input=RelSubset#15,convention=ENUMERABLE,sort=[]), rowcount=10.0, cumulative cost={inf}

Graphviz:
digraph G {
	root [style=filled,label="Root"];
	subgraph cluster0{
		label="Set 0 RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)";
		rel1 [label="rel#1:LogicalTableScan\ntable=[adhoc, NATION]\nrows=100.0, cost={inf}",shape=box]
		subset13 [label="rel#13:Subset#0.NONE.[]"]
	}
	subgraph cluster1{
		label="Set 1 RecordType(BIGINT EXPR$0)";
		rel14 [label="rel#14:LogicalAggregate\ninput=RelSubset#13,group={},EXPR$0=COUNT()\nrows=10.0, cost={inf}",shape=box]
		rel18 [label="rel#18:AbstractConverter\ninput=RelSubset#15,convention=ENUMERABLE,sort=[]\nrows=10.0, cost={inf}",shape=box]
		subset15 [label="rel#15:Subset#1.NONE.[]"]
		subset17 [label="rel#17:Subset#1.ENUMERABLE.[]",color=red]
	}
	root -> subset17;
	subset13 -> rel1;
	subset15 -> rel14; rel14 -> subset13;
	subset17 -> rel18; rel18 -> subset15;
}Importances: { rel#17:Subset#1.ENUMERABLE.[]=1.0 rel#15:Subset#1.NONE.[]=0.9 rel#13:Subset#0.NONE.[]=0.81}

2020-05-26 20:34:27,416 TRACE org.apache.calcite.plan.RelOptPlanner [main] Sorted rule queue:
rule [EnumerableAggregateRule(in:NONE,out:ENUMERABLE)] rels [#14] importance 1.0
rule [AggregatePullUpConstantsRule] rels [#14,#1] importance 0.9
rule [AggregateExpandDistinctAggregatesRule] rels [#14] importance 0.9
rule [BindableTableScanRule] rels [#1] importance 0.81
rule [EnumerableTableScanRule(in:NONE,out:ENUMERABLE)] rels [#1] importance 0.81
2020-05-26 20:34:27,417 DEBUG org.apache.calcite.plan.RelOptPlanner [main] Pop match: rule [EnumerableAggregateRule(in:NONE,out:ENUMERABLE)] rels [#14]
2020-05-26 20:34:27,417 DEBUG org.apache.calcite.plan.RelOptPlanner [main] call#50: Apply rule [EnumerableAggregateRule(in:NONE,out:ENUMERABLE)] to [rel#14:LogicalAggregate.NONE.[](input=RelSubset#13,group={},EXPR$0=COUNT())]
2020-05-26 20:34:27,419 TRACE org.apache.calcite.plan.RelOptPlanner [main] new RelSubset#19
2020-05-26 20:34:27,419 TRACE org.apache.calcite.plan.RelOptPlanner [main] new EnumerableAggregate#20
2020-05-26 20:34:27,447 DEBUG org.apache.calcite.plan.RelOptPlanner [main] Transform to: rel#20 via EnumerableAggregateRule(in:NONE,out:ENUMERABLE)
2020-05-26 20:34:27,447 TRACE org.apache.calcite.plan.RelOptPlanner [main] call#50: Rule EnumerableAggregateRule(in:NONE,out:ENUMERABLE) arguments [rel#14:LogicalAggregate.NONE.[](input=RelSubset#13,group={},EXPR$0=COUNT())] created rel#20:EnumerableAggregate
2020-05-26 20:34:27,448 TRACE org.apache.calcite.plan.RelOptPlanner [main] Register rel#20:EnumerableAggregate.ENUMERABLE.[](input=RelSubset#19,group={},EXPR$0=COUNT()) in rel#17:Subset#1.ENUMERABLE.[]
2020-05-26 20:34:27,448 TRACE org.apache.calcite.plan.RelOptPlanner [main] Importance of [rel#17:Subset#1.ENUMERABLE.[]] is 1.0
2020-05-26 20:34:27,448 DEBUG org.apache.calcite.plan.RelOptPlanner [main] call#50 generated 1 successors: [rel#20:EnumerableAggregate.ENUMERABLE.[](input=RelSubset#19,group={},EXPR$0=COUNT())]
2020-05-26 20:34:27,448 DEBUG org.apache.calcite.plan.RelOptPlanner [main] PLANNER = org.apache.calcite.plan.volcano.VolcanoPlanner@5fe7f967; TICK = 5/3; PHASE = OPTIMIZE; COST = {inf}
2020-05-26 20:34:27,450 TRACE org.apache.calcite.plan.RelOptPlanner [main] Root: rel#17:Subset#1.ENUMERABLE.[]
Original rel:
LogicalAggregate(group=[{}], EXPR$0=[COUNT()]): rowcount = 10.0, cumulative cost = {111.25 rows, 101.0 cpu, 0.0 io}, id = 12
  LogicalTableScan(table=[[adhoc, NATION]]): rowcount = 100.0, cumulative cost = {100.0 rows, 101.0 cpu, 0.0 io}, id = 1

Sets:
Set#0, type: RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)
	rel#13:Subset#0.NONE.[], best=null, importance=0.81
		rel#1:LogicalTableScan.NONE.[](table=[adhoc, NATION]), rowcount=100.0, cumulative cost={inf}
	rel#19:Subset#0.ENUMERABLE.[], best=null, importance=0.405
Set#1, type: RecordType(BIGINT EXPR$0)
	rel#15:Subset#1.NONE.[], best=null, importance=0.9
		rel#14:LogicalAggregate.NONE.[](input=RelSubset#13,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={inf}
	rel#17:Subset#1.ENUMERABLE.[], best=null, importance=1.0
		rel#18:AbstractConverter.ENUMERABLE.[](input=RelSubset#15,convention=ENUMERABLE,sort=[]), rowcount=10.0, cumulative cost={inf}
		rel#20:EnumerableAggregate.ENUMERABLE.[](input=RelSubset#19,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={inf}

Graphviz:
digraph G {
	root [style=filled,label="Root"];
	subgraph cluster0{
		label="Set 0 RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)";
		rel1 [label="rel#1:LogicalTableScan\ntable=[adhoc, NATION]\nrows=100.0, cost={inf}",shape=box]
		subset13 [label="rel#13:Subset#0.NONE.[]"]
		subset19 [label="rel#19:Subset#0.ENUMERABLE.[]",color=red]
	}
	subgraph cluster1{
		label="Set 1 RecordType(BIGINT EXPR$0)";
		rel14 [label="rel#14:LogicalAggregate\ninput=RelSubset#13,group={},EXPR$0=COUNT()\nrows=10.0, cost={inf}",shape=box]
		rel18 [label="rel#18:AbstractConverter\ninput=RelSubset#15,convention=ENUMERABLE,sort=[]\nrows=10.0, cost={inf}",shape=box]
		rel20 [label="rel#20:EnumerableAggregate\ninput=RelSubset#19,group={},EXPR$0=COUNT()\nrows=10.0, cost={inf}",shape=box]
		subset15 [label="rel#15:Subset#1.NONE.[]"]
		subset17 [label="rel#17:Subset#1.ENUMERABLE.[]"]
	}
	root -> subset17;
	subset13 -> rel1;
	subset15 -> rel14; rel14 -> subset13;
	subset17 -> rel18; rel18 -> subset15;
	subset17 -> rel20; rel20 -> subset19;
}Importances: { rel#17:Subset#1.ENUMERABLE.[]=1.0 rel#15:Subset#1.NONE.[]=0.9 rel#13:Subset#0.NONE.[]=0.81}

2020-05-26 20:34:27,451 TRACE org.apache.calcite.plan.RelOptPlanner [main] Sorted rule queue:
rule [AggregatePullUpConstantsRule] rels [#14,#1] importance 0.9
rule [AggregateExpandDistinctAggregatesRule] rels [#14] importance 0.9
rule [BindableTableScanRule] rels [#1] importance 0.81
rule [EnumerableTableScanRule(in:NONE,out:ENUMERABLE)] rels [#1] importance 0.81
2020-05-26 20:34:27,451 DEBUG org.apache.calcite.plan.RelOptPlanner [main] Pop match: rule [AggregatePullUpConstantsRule] rels [#14,#1]
2020-05-26 20:34:27,451 DEBUG org.apache.calcite.plan.RelOptPlanner [main] call#39: Apply rule [AggregatePullUpConstantsRule] to [rel#14:LogicalAggregate.NONE.[](input=RelSubset#13,group={},EXPR$0=COUNT()), rel#1:LogicalTableScan.NONE.[](table=[adhoc, NATION])]
2020-05-26 20:34:27,451 DEBUG org.apache.calcite.plan.RelOptPlanner [main] call#39 generated 0 successors.
2020-05-26 20:34:27,451 DEBUG org.apache.calcite.plan.RelOptPlanner [main] PLANNER = org.apache.calcite.plan.volcano.VolcanoPlanner@5fe7f967; TICK = 6/4; PHASE = OPTIMIZE; COST = {inf}
2020-05-26 20:34:27,454 TRACE org.apache.calcite.plan.RelOptPlanner [main] Root: rel#17:Subset#1.ENUMERABLE.[]
Original rel:
LogicalAggregate(group=[{}], EXPR$0=[COUNT()]): rowcount = 10.0, cumulative cost = {111.25 rows, 101.0 cpu, 0.0 io}, id = 12
  LogicalTableScan(table=[[adhoc, NATION]]): rowcount = 100.0, cumulative cost = {100.0 rows, 101.0 cpu, 0.0 io}, id = 1

Sets:
Set#0, type: RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)
	rel#13:Subset#0.NONE.[], best=null, importance=0.81
		rel#1:LogicalTableScan.NONE.[](table=[adhoc, NATION]), rowcount=100.0, cumulative cost={inf}
	rel#19:Subset#0.ENUMERABLE.[], best=null, importance=0.405
Set#1, type: RecordType(BIGINT EXPR$0)
	rel#15:Subset#1.NONE.[], best=null, importance=0.9
		rel#14:LogicalAggregate.NONE.[](input=RelSubset#13,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={inf}
	rel#17:Subset#1.ENUMERABLE.[], best=null, importance=1.0
		rel#18:AbstractConverter.ENUMERABLE.[](input=RelSubset#15,convention=ENUMERABLE,sort=[]), rowcount=10.0, cumulative cost={inf}
		rel#20:EnumerableAggregate.ENUMERABLE.[](input=RelSubset#19,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={inf}

Graphviz:
digraph G {
	root [style=filled,label="Root"];
	subgraph cluster0{
		label="Set 0 RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)";
		rel1 [label="rel#1:LogicalTableScan\ntable=[adhoc, NATION]\nrows=100.0, cost={inf}",shape=box]
		subset13 [label="rel#13:Subset#0.NONE.[]"]
		subset19 [label="rel#19:Subset#0.ENUMERABLE.[]",color=red]
	}
	subgraph cluster1{
		label="Set 1 RecordType(BIGINT EXPR$0)";
		rel14 [label="rel#14:LogicalAggregate\ninput=RelSubset#13,group={},EXPR$0=COUNT()\nrows=10.0, cost={inf}",shape=box]
		rel18 [label="rel#18:AbstractConverter\ninput=RelSubset#15,convention=ENUMERABLE,sort=[]\nrows=10.0, cost={inf}",shape=box]
		rel20 [label="rel#20:EnumerableAggregate\ninput=RelSubset#19,group={},EXPR$0=COUNT()\nrows=10.0, cost={inf}",shape=box]
		subset15 [label="rel#15:Subset#1.NONE.[]"]
		subset17 [label="rel#17:Subset#1.ENUMERABLE.[]"]
	}
	root -> subset17;
	subset13 -> rel1;
	subset15 -> rel14; rel14 -> subset13;
	subset17 -> rel18; rel18 -> subset15;
	subset17 -> rel20; rel20 -> subset19;
}Importances: { rel#17:Subset#1.ENUMERABLE.[]=1.0 rel#15:Subset#1.NONE.[]=0.9 rel#13:Subset#0.NONE.[]=0.81}

2020-05-26 20:34:27,454 TRACE org.apache.calcite.plan.RelOptPlanner [main] Sorted rule queue:
rule [AggregateExpandDistinctAggregatesRule] rels [#14] importance 0.9
rule [BindableTableScanRule] rels [#1] importance 0.81
rule [EnumerableTableScanRule(in:NONE,out:ENUMERABLE)] rels [#1] importance 0.81
2020-05-26 20:34:27,454 DEBUG org.apache.calcite.plan.RelOptPlanner [main] Pop match: rule [AggregateExpandDistinctAggregatesRule] rels [#14]
2020-05-26 20:34:27,454 DEBUG org.apache.calcite.plan.RelOptPlanner [main] call#25: Apply rule [AggregateExpandDistinctAggregatesRule] to [rel#14:LogicalAggregate.NONE.[](input=RelSubset#13,group={},EXPR$0=COUNT())]
2020-05-26 20:34:27,454 DEBUG org.apache.calcite.plan.RelOptPlanner [main] call#25 generated 0 successors.
2020-05-26 20:34:27,455 DEBUG org.apache.calcite.plan.RelOptPlanner [main] PLANNER = org.apache.calcite.plan.volcano.VolcanoPlanner@5fe7f967; TICK = 7/5; PHASE = OPTIMIZE; COST = {inf}
2020-05-26 20:34:27,457 TRACE org.apache.calcite.plan.RelOptPlanner [main] Root: rel#17:Subset#1.ENUMERABLE.[]
Original rel:
LogicalAggregate(group=[{}], EXPR$0=[COUNT()]): rowcount = 10.0, cumulative cost = {111.25 rows, 101.0 cpu, 0.0 io}, id = 12
  LogicalTableScan(table=[[adhoc, NATION]]): rowcount = 100.0, cumulative cost = {100.0 rows, 101.0 cpu, 0.0 io}, id = 1

Sets:
Set#0, type: RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)
	rel#13:Subset#0.NONE.[], best=null, importance=0.81
		rel#1:LogicalTableScan.NONE.[](table=[adhoc, NATION]), rowcount=100.0, cumulative cost={inf}
	rel#19:Subset#0.ENUMERABLE.[], best=null, importance=0.405
Set#1, type: RecordType(BIGINT EXPR$0)
	rel#15:Subset#1.NONE.[], best=null, importance=0.9
		rel#14:LogicalAggregate.NONE.[](input=RelSubset#13,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={inf}
	rel#17:Subset#1.ENUMERABLE.[], best=null, importance=1.0
		rel#18:AbstractConverter.ENUMERABLE.[](input=RelSubset#15,convention=ENUMERABLE,sort=[]), rowcount=10.0, cumulative cost={inf}
		rel#20:EnumerableAggregate.ENUMERABLE.[](input=RelSubset#19,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={inf}

Graphviz:
digraph G {
	root [style=filled,label="Root"];
	subgraph cluster0{
		label="Set 0 RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)";
		rel1 [label="rel#1:LogicalTableScan\ntable=[adhoc, NATION]\nrows=100.0, cost={inf}",shape=box]
		subset13 [label="rel#13:Subset#0.NONE.[]"]
		subset19 [label="rel#19:Subset#0.ENUMERABLE.[]",color=red]
	}
	subgraph cluster1{
		label="Set 1 RecordType(BIGINT EXPR$0)";
		rel14 [label="rel#14:LogicalAggregate\ninput=RelSubset#13,group={},EXPR$0=COUNT()\nrows=10.0, cost={inf}",shape=box]
		rel18 [label="rel#18:AbstractConverter\ninput=RelSubset#15,convention=ENUMERABLE,sort=[]\nrows=10.0, cost={inf}",shape=box]
		rel20 [label="rel#20:EnumerableAggregate\ninput=RelSubset#19,group={},EXPR$0=COUNT()\nrows=10.0, cost={inf}",shape=box]
		subset15 [label="rel#15:Subset#1.NONE.[]"]
		subset17 [label="rel#17:Subset#1.ENUMERABLE.[]"]
	}
	root -> subset17;
	subset13 -> rel1;
	subset15 -> rel14; rel14 -> subset13;
	subset17 -> rel18; rel18 -> subset15;
	subset17 -> rel20; rel20 -> subset19;
}Importances: { rel#17:Subset#1.ENUMERABLE.[]=1.0 rel#15:Subset#1.NONE.[]=0.9 rel#13:Subset#0.NONE.[]=0.81}

2020-05-26 20:34:27,457 TRACE org.apache.calcite.plan.RelOptPlanner [main] Sorted rule queue:
rule [BindableTableScanRule] rels [#1] importance 0.81
rule [EnumerableTableScanRule(in:NONE,out:ENUMERABLE)] rels [#1] importance 0.81
2020-05-26 20:34:27,458 DEBUG org.apache.calcite.plan.RelOptPlanner [main] Pop match: rule [BindableTableScanRule] rels [#1]
2020-05-26 20:34:27,458 DEBUG org.apache.calcite.plan.RelOptPlanner [main] call#17: Apply rule [BindableTableScanRule] to [rel#1:LogicalTableScan.NONE.[](table=[adhoc, NATION])]
2020-05-26 20:34:27,460 DEBUG org.apache.calcite.plan.RelOptPlanner [main] call#17 generated 0 successors.
2020-05-26 20:34:27,460 DEBUG org.apache.calcite.plan.RelOptPlanner [main] PLANNER = org.apache.calcite.plan.volcano.VolcanoPlanner@5fe7f967; TICK = 8/6; PHASE = OPTIMIZE; COST = {inf}
2020-05-26 20:34:27,462 TRACE org.apache.calcite.plan.RelOptPlanner [main] Root: rel#17:Subset#1.ENUMERABLE.[]
Original rel:
LogicalAggregate(group=[{}], EXPR$0=[COUNT()]): rowcount = 10.0, cumulative cost = {111.25 rows, 101.0 cpu, 0.0 io}, id = 12
  LogicalTableScan(table=[[adhoc, NATION]]): rowcount = 100.0, cumulative cost = {100.0 rows, 101.0 cpu, 0.0 io}, id = 1

Sets:
Set#0, type: RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)
	rel#13:Subset#0.NONE.[], best=null, importance=0.81
		rel#1:LogicalTableScan.NONE.[](table=[adhoc, NATION]), rowcount=100.0, cumulative cost={inf}
	rel#19:Subset#0.ENUMERABLE.[], best=null, importance=0.405
Set#1, type: RecordType(BIGINT EXPR$0)
	rel#15:Subset#1.NONE.[], best=null, importance=0.9
		rel#14:LogicalAggregate.NONE.[](input=RelSubset#13,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={inf}
	rel#17:Subset#1.ENUMERABLE.[], best=null, importance=1.0
		rel#18:AbstractConverter.ENUMERABLE.[](input=RelSubset#15,convention=ENUMERABLE,sort=[]), rowcount=10.0, cumulative cost={inf}
		rel#20:EnumerableAggregate.ENUMERABLE.[](input=RelSubset#19,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={inf}

Graphviz:
digraph G {
	root [style=filled,label="Root"];
	subgraph cluster0{
		label="Set 0 RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)";
		rel1 [label="rel#1:LogicalTableScan\ntable=[adhoc, NATION]\nrows=100.0, cost={inf}",shape=box]
		subset13 [label="rel#13:Subset#0.NONE.[]"]
		subset19 [label="rel#19:Subset#0.ENUMERABLE.[]",color=red]
	}
	subgraph cluster1{
		label="Set 1 RecordType(BIGINT EXPR$0)";
		rel14 [label="rel#14:LogicalAggregate\ninput=RelSubset#13,group={},EXPR$0=COUNT()\nrows=10.0, cost={inf}",shape=box]
		rel18 [label="rel#18:AbstractConverter\ninput=RelSubset#15,convention=ENUMERABLE,sort=[]\nrows=10.0, cost={inf}",shape=box]
		rel20 [label="rel#20:EnumerableAggregate\ninput=RelSubset#19,group={},EXPR$0=COUNT()\nrows=10.0, cost={inf}",shape=box]
		subset15 [label="rel#15:Subset#1.NONE.[]"]
		subset17 [label="rel#17:Subset#1.ENUMERABLE.[]"]
	}
	root -> subset17;
	subset13 -> rel1;
	subset15 -> rel14; rel14 -> subset13;
	subset17 -> rel18; rel18 -> subset15;
	subset17 -> rel20; rel20 -> subset19;
}Importances: { rel#17:Subset#1.ENUMERABLE.[]=1.0 rel#15:Subset#1.NONE.[]=0.9 rel#13:Subset#0.NONE.[]=0.81}

2020-05-26 20:34:27,462 TRACE org.apache.calcite.plan.RelOptPlanner [main] Sorted rule queue:
rule [EnumerableTableScanRule(in:NONE,out:ENUMERABLE)] rels [#1] importance 0.81
2020-05-26 20:34:27,462 DEBUG org.apache.calcite.plan.RelOptPlanner [main] Pop match: rule [EnumerableTableScanRule(in:NONE,out:ENUMERABLE)] rels [#1]
2020-05-26 20:34:27,463 DEBUG org.apache.calcite.plan.RelOptPlanner [main] call#1: Apply rule [EnumerableTableScanRule(in:NONE,out:ENUMERABLE)] to [rel#1:LogicalTableScan.NONE.[](table=[adhoc, NATION])]
2020-05-26 20:34:27,463 TRACE org.apache.calcite.plan.RelOptPlanner [main] new EnumerableTableScan#21
2020-05-26 20:34:27,463 DEBUG org.apache.calcite.plan.RelOptPlanner [main] Transform to: rel#21 via EnumerableTableScanRule(in:NONE,out:ENUMERABLE)
2020-05-26 20:34:27,463 TRACE org.apache.calcite.plan.RelOptPlanner [main] call#1: Rule EnumerableTableScanRule(in:NONE,out:ENUMERABLE) arguments [rel#1:LogicalTableScan.NONE.[](table=[adhoc, NATION])] created rel#21:EnumerableTableScan
2020-05-26 20:34:27,464 TRACE org.apache.calcite.plan.RelOptPlanner [main] Subset cost changed: subset [rel#19:Subset#0.ENUMERABLE.[]] cost was {inf} now {100.0 rows, 101.0 cpu, 0.0 io}
2020-05-26 20:34:27,464 TRACE org.apache.calcite.plan.RelOptPlanner [main] Subset cost changed: subset [rel#17:Subset#1.ENUMERABLE.[]] cost was {inf} now {111.25 rows, 101.0 cpu, 0.0 io}
2020-05-26 20:34:27,464 TRACE org.apache.calcite.plan.RelOptPlanner [main] Importance of [rel#17:Subset#1.ENUMERABLE.[]] is 1.0
2020-05-26 20:34:27,464 TRACE org.apache.calcite.plan.RelOptPlanner [main] Register rel#21:EnumerableTableScan.ENUMERABLE.[](table=[adhoc, NATION]) in rel#19:Subset#0.ENUMERABLE.[]
2020-05-26 20:34:27,465 TRACE org.apache.calcite.plan.RelOptPlanner [main] Importance of [rel#19:Subset#0.ENUMERABLE.[]] to its parent [rel#17:Subset#1.ENUMERABLE.[]] is 0.9469964664310954 (parent importance=1.0, child cost=201.0, parent cost=212.25)
2020-05-26 20:34:27,465 TRACE org.apache.calcite.plan.RelOptPlanner [main] Importance of [rel#19:Subset#0.ENUMERABLE.[]] is 0.9469964664310954
2020-05-26 20:34:27,465 DEBUG org.apache.calcite.plan.RelOptPlanner [main] call#1 generated 1 successors: [rel#21:EnumerableTableScan.ENUMERABLE.[](table=[adhoc, NATION])]
2020-05-26 20:34:27,465 TRACE org.apache.calcite.plan.RelOptPlanner [main] boostImportance(1.0, [])
2020-05-26 20:34:27,466 DEBUG org.apache.calcite.plan.RelOptPlanner [main] PLANNER = org.apache.calcite.plan.volcano.VolcanoPlanner@5fe7f967; TICK = 9/7; PHASE = OPTIMIZE; COST = {111.25 rows, 101.0 cpu, 0.0 io}
2020-05-26 20:34:27,468 TRACE org.apache.calcite.plan.RelOptPlanner [main] Root: rel#17:Subset#1.ENUMERABLE.[]
Original rel:
LogicalAggregate(group=[{}], EXPR$0=[COUNT()]): rowcount = 10.0, cumulative cost = {111.25 rows, 101.0 cpu, 0.0 io}, id = 12
  LogicalTableScan(table=[[adhoc, NATION]]): rowcount = 100.0, cumulative cost = {100.0 rows, 101.0 cpu, 0.0 io}, id = 1

Sets:
Set#0, type: RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)
	rel#13:Subset#0.NONE.[], best=null, importance=0.81
		rel#1:LogicalTableScan.NONE.[](table=[adhoc, NATION]), rowcount=100.0, cumulative cost={inf}
	rel#19:Subset#0.ENUMERABLE.[], best=rel#21, importance=0.9469964664310954
		rel#21:EnumerableTableScan.ENUMERABLE.[](table=[adhoc, NATION]), rowcount=100.0, cumulative cost={100.0 rows, 101.0 cpu, 0.0 io}
Set#1, type: RecordType(BIGINT EXPR$0)
	rel#15:Subset#1.NONE.[], best=null, importance=0.9
		rel#14:LogicalAggregate.NONE.[](input=RelSubset#13,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={inf}
	rel#17:Subset#1.ENUMERABLE.[], best=rel#20, importance=1.0
		rel#18:AbstractConverter.ENUMERABLE.[](input=RelSubset#15,convention=ENUMERABLE,sort=[]), rowcount=10.0, cumulative cost={inf}
		rel#20:EnumerableAggregate.ENUMERABLE.[](input=RelSubset#19,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={111.25 rows, 101.0 cpu, 0.0 io}

Graphviz:
digraph G {
	root [style=filled,label="Root"];
	subgraph cluster0{
		label="Set 0 RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)";
		rel1 [label="rel#1:LogicalTableScan\ntable=[adhoc, NATION]\nrows=100.0, cost={inf}",shape=box]
		rel21 [label="rel#21:EnumerableTableScan\ntable=[adhoc, NATION]\nrows=100.0, cost={100.0 rows, 101.0 cpu, 0.0 io}",color=blue,shape=box]
		subset13 [label="rel#13:Subset#0.NONE.[]"]
		subset19 [label="rel#19:Subset#0.ENUMERABLE.[]"]
	}
	subgraph cluster1{
		label="Set 1 RecordType(BIGINT EXPR$0)";
		rel14 [label="rel#14:LogicalAggregate\ninput=RelSubset#13,group={},EXPR$0=COUNT()\nrows=10.0, cost={inf}",shape=box]
		rel18 [label="rel#18:AbstractConverter\ninput=RelSubset#15,convention=ENUMERABLE,sort=[]\nrows=10.0, cost={inf}",shape=box]
		rel20 [label="rel#20:EnumerableAggregate\ninput=RelSubset#19,group={},EXPR$0=COUNT()\nrows=10.0, cost={111.25 rows, 101.0 cpu, 0.0 io}",color=blue,shape=box]
		subset15 [label="rel#15:Subset#1.NONE.[]"]
		subset17 [label="rel#17:Subset#1.ENUMERABLE.[]"]
	}
	root -> subset17;
	subset13 -> rel1;
	subset19 -> rel21[color=blue];
	subset15 -> rel14; rel14 -> subset13;
	subset17 -> rel18; rel18 -> subset15;
	subset17 -> rel20[color=blue]; rel20 -> subset19[color=blue];
}Importances: { rel#17:Subset#1.ENUMERABLE.[]=1.0 rel#19:Subset#0.ENUMERABLE.[]=0.9469964664310954 rel#15:Subset#1.NONE.[]=0.9 rel#13:Subset#0.NONE.[]=0.81}

2020-05-26 20:34:27,468 TRACE org.apache.calcite.plan.RelOptPlanner [main] boostImportance(1.0, [])
2020-05-26 20:34:27,468 DEBUG org.apache.calcite.plan.RelOptPlanner [main] PLANNER = org.apache.calcite.plan.volcano.VolcanoPlanner@5fe7f967; TICK = 10/1; PHASE = CLEANUP; COST = {111.25 rows, 101.0 cpu, 0.0 io}
2020-05-26 20:34:27,470 TRACE org.apache.calcite.plan.RelOptPlanner [main] Root: rel#17:Subset#1.ENUMERABLE.[]
Original rel:
LogicalAggregate(group=[{}], EXPR$0=[COUNT()]): rowcount = 10.0, cumulative cost = {111.25 rows, 101.0 cpu, 0.0 io}, id = 12
  LogicalTableScan(table=[[adhoc, NATION]]): rowcount = 100.0, cumulative cost = {100.0 rows, 101.0 cpu, 0.0 io}, id = 1

Sets:
Set#0, type: RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)
	rel#13:Subset#0.NONE.[], best=null, importance=0.81
		rel#1:LogicalTableScan.NONE.[](table=[adhoc, NATION]), rowcount=100.0, cumulative cost={inf}
	rel#19:Subset#0.ENUMERABLE.[], best=rel#21, importance=0.9
		rel#21:EnumerableTableScan.ENUMERABLE.[](table=[adhoc, NATION]), rowcount=100.0, cumulative cost={100.0 rows, 101.0 cpu, 0.0 io}
Set#1, type: RecordType(BIGINT EXPR$0)
	rel#15:Subset#1.NONE.[], best=null, importance=0.9
		rel#14:LogicalAggregate.NONE.[](input=RelSubset#13,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={inf}
	rel#17:Subset#1.ENUMERABLE.[], best=rel#20, importance=1.0
		rel#18:AbstractConverter.ENUMERABLE.[](input=RelSubset#15,convention=ENUMERABLE,sort=[]), rowcount=10.0, cumulative cost={inf}
		rel#20:EnumerableAggregate.ENUMERABLE.[](input=RelSubset#19,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={111.25 rows, 101.0 cpu, 0.0 io}

Graphviz:
digraph G {
	root [style=filled,label="Root"];
	subgraph cluster0{
		label="Set 0 RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)";
		rel1 [label="rel#1:LogicalTableScan\ntable=[adhoc, NATION]\nrows=100.0, cost={inf}",shape=box]
		rel21 [label="rel#21:EnumerableTableScan\ntable=[adhoc, NATION]\nrows=100.0, cost={100.0 rows, 101.0 cpu, 0.0 io}",color=blue,shape=box]
		subset13 [label="rel#13:Subset#0.NONE.[]"]
		subset19 [label="rel#19:Subset#0.ENUMERABLE.[]"]
	}
	subgraph cluster1{
		label="Set 1 RecordType(BIGINT EXPR$0)";
		rel14 [label="rel#14:LogicalAggregate\ninput=RelSubset#13,group={},EXPR$0=COUNT()\nrows=10.0, cost={inf}",shape=box]
		rel18 [label="rel#18:AbstractConverter\ninput=RelSubset#15,convention=ENUMERABLE,sort=[]\nrows=10.0, cost={inf}",shape=box]
		rel20 [label="rel#20:EnumerableAggregate\ninput=RelSubset#19,group={},EXPR$0=COUNT()\nrows=10.0, cost={111.25 rows, 101.0 cpu, 0.0 io}",color=blue,shape=box]
		subset15 [label="rel#15:Subset#1.NONE.[]"]
		subset17 [label="rel#17:Subset#1.ENUMERABLE.[]"]
	}
	root -> subset17;
	subset13 -> rel1;
	subset19 -> rel21[color=blue];
	subset15 -> rel14; rel14 -> subset13;
	subset17 -> rel18; rel18 -> subset15;
	subset17 -> rel20[color=blue]; rel20 -> subset19[color=blue];
}Importances: { rel#17:Subset#1.ENUMERABLE.[]=1.0 rel#15:Subset#1.NONE.[]=0.9 rel#19:Subset#0.ENUMERABLE.[]=0.9 rel#13:Subset#0.NONE.[]=0.81}

2020-05-26 20:34:27,472 TRACE org.apache.calcite.plan.RelOptPlanner [main] Root: rel#17:Subset#1.ENUMERABLE.[]
Original rel:
LogicalAggregate(group=[{}], EXPR$0=[COUNT()]): rowcount = 10.0, cumulative cost = {111.25 rows, 101.0 cpu, 0.0 io}, id = 12
  LogicalTableScan(table=[[adhoc, NATION]]): rowcount = 100.0, cumulative cost = {100.0 rows, 101.0 cpu, 0.0 io}, id = 1

Sets:
Set#0, type: RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)
	rel#13:Subset#0.NONE.[], best=null, importance=0.81
		rel#1:LogicalTableScan.NONE.[](table=[adhoc, NATION]), rowcount=100.0, cumulative cost={inf}
	rel#19:Subset#0.ENUMERABLE.[], best=rel#21, importance=0.9
		rel#21:EnumerableTableScan.ENUMERABLE.[](table=[adhoc, NATION]), rowcount=100.0, cumulative cost={100.0 rows, 101.0 cpu, 0.0 io}
Set#1, type: RecordType(BIGINT EXPR$0)
	rel#15:Subset#1.NONE.[], best=null, importance=0.9
		rel#14:LogicalAggregate.NONE.[](input=RelSubset#13,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={inf}
	rel#17:Subset#1.ENUMERABLE.[], best=rel#20, importance=1.0
		rel#18:AbstractConverter.ENUMERABLE.[](input=RelSubset#15,convention=ENUMERABLE,sort=[]), rowcount=10.0, cumulative cost={inf}
		rel#20:EnumerableAggregate.ENUMERABLE.[](input=RelSubset#19,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={111.25 rows, 101.0 cpu, 0.0 io}

Graphviz:
digraph G {
	root [style=filled,label="Root"];
	subgraph cluster0{
		label="Set 0 RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)";
		rel1 [label="rel#1:LogicalTableScan\ntable=[adhoc, NATION]\nrows=100.0, cost={inf}",shape=box]
		rel21 [label="rel#21:EnumerableTableScan\ntable=[adhoc, NATION]\nrows=100.0, cost={100.0 rows, 101.0 cpu, 0.0 io}",color=blue,shape=box]
		subset13 [label="rel#13:Subset#0.NONE.[]"]
		subset19 [label="rel#19:Subset#0.ENUMERABLE.[]"]
	}
	subgraph cluster1{
		label="Set 1 RecordType(BIGINT EXPR$0)";
		rel14 [label="rel#14:LogicalAggregate\ninput=RelSubset#13,group={},EXPR$0=COUNT()\nrows=10.0, cost={inf}",shape=box]
		rel18 [label="rel#18:AbstractConverter\ninput=RelSubset#15,convention=ENUMERABLE,sort=[]\nrows=10.0, cost={inf}",shape=box]
		rel20 [label="rel#20:EnumerableAggregate\ninput=RelSubset#19,group={},EXPR$0=COUNT()\nrows=10.0, cost={111.25 rows, 101.0 cpu, 0.0 io}",color=blue,shape=box]
		subset15 [label="rel#15:Subset#1.NONE.[]"]
		subset17 [label="rel#17:Subset#1.ENUMERABLE.[]"]
	}
	root -> subset17;
	subset13 -> rel1;
	subset19 -> rel21[color=blue];
	subset15 -> rel14; rel14 -> subset13;
	subset17 -> rel18; rel18 -> subset15;
	subset17 -> rel20[color=blue]; rel20 -> subset19[color=blue];
}
2020-05-26 20:34:27,473 TRACE org.apache.calcite.plan.RelOptPlanner [main] new EnumerableAggregate#22
2020-05-26 20:34:27,474 DEBUG org.apache.calcite.plan.RelOptPlanner [main] Cheapest plan:
EnumerableAggregate(group=[{}], EXPR$0=[COUNT()]): rowcount = 10.0, cumulative cost = {111.25 rows, 101.0 cpu, 0.0 io}, id = 22
  EnumerableTableScan(table=[[adhoc, NATION]]): rowcount = 100.0, cumulative cost = {100.0 rows, 101.0 cpu, 0.0 io}, id = 21

2020-05-26 20:34:27,475 DEBUG org.apache.calcite.plan.RelOptPlanner [main] Provenance:
rel#22:EnumerableAggregate#22
  direct
    rel#20:EnumerableAggregate.ENUMERABLE.[](input=RelSubset#19,group={},EXPR$0=COUNT())
      call#50 rule [EnumerableAggregateRule(in:NONE,out:ENUMERABLE)]
        rel#14:LogicalAggregate.NONE.[](input=RelSubset#13,group={},EXPR$0=COUNT())
          no parent
rel#21:EnumerableTableScan.ENUMERABLE.[](table=[adhoc, NATION])
  call#1 rule [EnumerableTableScanRule(in:NONE,out:ENUMERABLE)]
    rel#1:LogicalTableScan.NONE.[](table=[adhoc, NATION])
      no parent

2020-05-26 20:34:27,475 TRACE org.apache.calcite.plan.RelOptPlanner [main] new HepRelVertex#23
2020-05-26 20:34:27,475 TRACE org.apache.calcite.plan.RelOptPlanner [main] new EnumerableAggregate#24
2020-05-26 20:34:27,475 TRACE org.apache.calcite.plan.RelOptPlanner [main] new HepRelVertex#25
2020-05-26 20:34:27,476 TRACE org.apache.calcite.plan.RelOptPlanner [main] 
Breadth-first from root:  {
    rel#25:HepRelVertex#25 = rel#24:EnumerableAggregate.ENUMERABLE.[](input=HepRelVertex#23,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={111.25 rows, 101.0 cpu, 0.0 io}
    rel#23:HepRelVertex#23 = rel#21:EnumerableTableScan.ENUMERABLE.[](table=[adhoc, NATION]), rowcount=100.0, cumulative cost={100.0 rows, 101.0 cpu, 0.0 io}
}
2020-05-26 20:34:27,476 TRACE org.apache.calcite.plan.RelOptPlanner [main] Applying rule set [NoneToBindableConverterRule(in:NONE,out:BINDABLE)]
2020-05-26 20:34:27,476 TRACE org.apache.calcite.plan.RelOptPlanner [main] collecting garbage
2020-05-26 20:34:27,476 TRACE org.apache.calcite.plan.RelOptPlanner [main] Applying rule set [EnumerableCalcRule(in:NONE,out:ENUMERABLE)]
2020-05-26 20:34:27,476 TRACE org.apache.calcite.plan.RelOptPlanner [main] Applying rule set [EnumerableFilterToCalcRule]
2020-05-26 20:34:27,476 TRACE org.apache.calcite.plan.RelOptPlanner [main] Applying rule set [EnumerableProjectToCalcRule]
2020-05-26 20:34:27,476 TRACE org.apache.calcite.plan.RelOptPlanner [main] Applying rule set [CalcMergeRule]
2020-05-26 20:34:27,476 TRACE org.apache.calcite.plan.RelOptPlanner [main] Applying rule set [FilterCalcMergeRule]
2020-05-26 20:34:27,476 TRACE org.apache.calcite.plan.RelOptPlanner [main] Applying rule set [ProjectCalcMergeRule]
2020-05-26 20:34:27,477 TRACE org.apache.calcite.plan.RelOptPlanner [main] Applying rule set [FilterToCalcRule]
2020-05-26 20:34:27,477 TRACE org.apache.calcite.plan.RelOptPlanner [main] Applying rule set [ProjectToCalcRule]
2020-05-26 20:34:27,477 TRACE org.apache.calcite.plan.RelOptPlanner [main] Applying rule set [CalcMergeRule]
2020-05-26 20:34:27,477 TRACE org.apache.calcite.plan.RelOptPlanner [main] Applying rule set [FilterCalcMergeRule]
2020-05-26 20:34:27,477 TRACE org.apache.calcite.plan.RelOptPlanner [main] Applying rule set [ProjectCalcMergeRule]
2020-05-26 20:34:27,477 DEBUG org.apache.calcite.plan.RelOptPlanner [main] For final plan, using rel#24:EnumerableAggregate.ENUMERABLE.[](input=HepRelVertex#23,group={},EXPR$0=COUNT())
2020-05-26 20:34:27,477 DEBUG org.apache.calcite.plan.RelOptPlanner [main] For final plan, using rel#21:EnumerableTableScan.ENUMERABLE.[](table=[adhoc, NATION])
2020-05-26 20:34:27,478 DEBUG org.apache.calcite.prepare.Prepare [main] Plan after physical tweaks: EnumerableAggregate(group=[{}], EXPR$0=[COUNT()]): rowcount = 10.0, cumulative cost = {111.25 rows, 101.0 cpu, 0.0 io}, id = 24
  EnumerableTableScan(table=[[adhoc, NATION]]): rowcount = 100.0, cumulative cost = {100.0 rows, 101.0 cpu, 0.0 io}, id = 21

2020-05-26 20:39:54,872 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is 'SELECT'; result is false
2020-05-26 20:39:54,873 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is 'COUNT'; result is false
2020-05-26 20:39:54,873 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is '('; result is false
2020-05-26 20:39:54,873 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is '*'; result is false
2020-05-26 20:39:54,873 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is ''; result is false
2020-05-26 20:39:54,874 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is ')'; result is false
2020-05-26 20:39:54,874 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is ''; result is false
2020-05-26 20:39:54,874 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is 'FROM'; result is false
2020-05-26 20:39:54,874 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is '`NATION`'; result is false
2020-05-26 20:39:54,874 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is ''; result is false
2020-05-26 20:39:54,874 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is ''; result is false
2020-05-26 20:39:54,874 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is ''; result is false
2020-05-26 20:39:54,870 TRACE org.apache.calcite.sql.parser [main] After unconditional rewrite: SELECT COUNT(*)
FROM `NATION`
2020-05-26 20:39:54,881 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is 'SELECT'; result is false
2020-05-26 20:39:54,882 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is 'COUNT'; result is false
2020-05-26 20:39:54,882 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is '('; result is false
2020-05-26 20:39:54,882 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is '*'; result is false
2020-05-26 20:39:54,882 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is ''; result is false
2020-05-26 20:39:54,882 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is ')'; result is false
2020-05-26 20:39:54,882 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is ''; result is false
2020-05-26 20:39:54,882 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is 'FROM'; result is false
2020-05-26 20:39:54,882 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is '`adhoc`'; result is false
2020-05-26 20:39:54,882 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is '.'; result is false
2020-05-26 20:39:54,882 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is '`NATION`'; result is false
2020-05-26 20:39:54,888 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is ''; result is false
2020-05-26 20:39:54,888 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is 'AS'; result is false
2020-05-26 20:39:54,888 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is '`NATION`'; result is false
2020-05-26 20:39:54,888 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is ''; result is false
2020-05-26 20:39:54,888 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is ''; result is false
2020-05-26 20:39:54,888 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is ''; result is false
2020-05-26 20:39:54,888 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is ''; result is false
2020-05-26 20:39:54,880 TRACE org.apache.calcite.sql.parser [main] After validation: SELECT COUNT(*)
FROM `adhoc`.`NATION` AS `NATION`
2020-05-26 20:39:54,891 TRACE org.apache.calcite.plan.RelOptPlanner [main] new LogicalTableScan#26
2020-05-26 20:39:54,891 TRACE org.apache.calcite.plan.RelOptPlanner [main] new LogicalTableScan#27
2020-05-26 20:39:54,892 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is 'COUNT'; result is false
2020-05-26 20:39:54,892 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is '('; result is false
2020-05-26 20:39:54,892 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is '*'; result is false
2020-05-26 20:39:54,892 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is ''; result is false
2020-05-26 20:39:54,892 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is ')'; result is false
2020-05-26 20:39:54,893 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is 'COUNT'; result is false
2020-05-26 20:39:54,893 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is '('; result is false
2020-05-26 20:39:54,893 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is '*'; result is false
2020-05-26 20:39:54,893 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is ''; result is false
2020-05-26 20:39:54,893 TRACE org.apache.calcite.sql.pretty.SqlPrettyWriter [main] Token is ')'; result is false
2020-05-26 20:39:54,894 TRACE org.apache.calcite.plan.RelOptPlanner [main] new LogicalProject#28
2020-05-26 20:39:54,894 TRACE org.apache.calcite.plan.RelOptPlanner [main] new LogicalAggregate#29
2020-05-26 20:39:54,894 DEBUG org.apache.calcite.sql2rel [main] Plan after converting SqlNode to RelNode
LogicalAggregate(group=[{}], EXPR$0=[COUNT()])
  LogicalProject($f0=[0])
    LogicalTableScan(table=[[adhoc, NATION]])

2020-05-26 20:39:54,895 TRACE org.apache.calcite.plan.RelOptPlanner [main] new LogicalProject#30
2020-05-26 20:39:54,896 TRACE org.apache.calcite.plan.RelOptPlanner [main] new LogicalProject#31
2020-05-26 20:39:54,896 TRACE org.apache.calcite.plan.RelOptPlanner [main] new LogicalAggregate#32
2020-05-26 20:39:54,896 DEBUG org.apache.calcite.sql2rel [main] Plan after trimming unused fields
LogicalAggregate(group=[{}], EXPR$0=[COUNT()])
  LogicalTableScan(table=[[adhoc, NATION]])

2020-05-26 20:39:54,896 DEBUG org.apache.calcite.sql2rel [main] Plan after trimming unused fields
LogicalAggregate(group=[{}], EXPR$0=[COUNT()])
  LogicalTableScan(table=[[adhoc, NATION]])

2020-05-26 20:39:54,897 TRACE org.apache.calcite.plan.RelOptPlanner [main] new HepRelVertex#33
2020-05-26 20:39:54,897 TRACE org.apache.calcite.plan.RelOptPlanner [main] new LogicalAggregate#34
2020-05-26 20:39:54,898 TRACE org.apache.calcite.plan.RelOptPlanner [main] new HepRelVertex#35
2020-05-26 20:39:54,899 TRACE org.apache.calcite.plan.RelOptPlanner [main] 
Breadth-first from root:  {
    rel#35:HepRelVertex#35 = rel#34:LogicalAggregate.NONE.[](input=HepRelVertex#33,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={111.25 rows, 101.0 cpu, 0.0 io}
    rel#33:HepRelVertex#33 = rel#27:LogicalTableScan.NONE.[](table=[adhoc, NATION]), rowcount=100.0, cumulative cost={100.0 rows, 101.0 cpu, 0.0 io}
}
2020-05-26 20:39:54,899 TRACE org.apache.calcite.plan.RelOptPlanner [main] Applying rule set [SubQueryRemoveRule:Filter, SubQueryRemoveRule:Project, SubQueryRemoveRule:Join]
2020-05-26 20:39:54,900 TRACE org.apache.calcite.plan.RelOptPlanner [main] collecting garbage
2020-05-26 20:39:54,900 DEBUG org.apache.calcite.plan.RelOptPlanner [main] For final plan, using rel#34:LogicalAggregate.NONE.[](input=HepRelVertex#33,group={},EXPR$0=COUNT())
2020-05-26 20:39:54,900 DEBUG org.apache.calcite.plan.RelOptPlanner [main] For final plan, using rel#27:LogicalTableScan.NONE.[](table=[adhoc, NATION])
2020-05-26 20:39:54,900 TRACE org.apache.calcite.plan.RelOptPlanner [main] new LogicalProject#36
2020-05-26 20:39:54,900 TRACE org.apache.calcite.plan.RelOptPlanner [main] new LogicalProject#37
2020-05-26 20:39:54,901 TRACE org.apache.calcite.plan.RelOptPlanner [main] new LogicalAggregate#38
2020-05-26 20:39:54,901 DEBUG org.apache.calcite.sql2rel [main] Plan after trimming unused fields
LogicalAggregate(group=[{}], EXPR$0=[COUNT()])
  LogicalTableScan(table=[[adhoc, NATION]])

2020-05-26 20:39:54,901 TRACE org.apache.calcite.plan.RelOptPlanner [main] new RelSubset#39
2020-05-26 20:39:54,901 TRACE org.apache.calcite.plan.RelOptPlanner [main] Register rel#27:LogicalTableScan.NONE.[](table=[adhoc, NATION]) in rel#39:Subset#0.NONE.[]
2020-05-26 20:39:54,902 TRACE org.apache.calcite.plan.RelOptPlanner [main] Importance of [rel#39:Subset#0.NONE.[]] is 0.0
2020-05-26 20:39:54,902 TRACE org.apache.calcite.plan.RelOptPlanner [main] OPTIMIZE Rule-match queued: rule [EnumerableTableScanRule(in:NONE,out:ENUMERABLE)] rels [#27]
2020-05-26 20:39:54,902 TRACE org.apache.calcite.plan.RelOptPlanner [main] OPTIMIZE Rule-match queued: rule [BindableTableScanRule] rels [#27]
2020-05-26 20:39:54,902 TRACE org.apache.calcite.plan.RelOptPlanner [main] new LogicalAggregate#40
2020-05-26 20:39:54,902 TRACE org.apache.calcite.plan.RelOptPlanner [main] new RelSubset#41
2020-05-26 20:39:54,902 TRACE org.apache.calcite.plan.RelOptPlanner [main] Register rel#40:LogicalAggregate.NONE.[](input=RelSubset#39,group={},EXPR$0=COUNT()) in rel#41:Subset#1.NONE.[]
2020-05-26 20:39:54,902 TRACE org.apache.calcite.plan.RelOptPlanner [main] Importance of [rel#39:Subset#0.NONE.[]] to its parent [rel#41:Subset#1.NONE.[]] is 0.0 (parent importance=0.0, child cost=1.0E30, parent cost=1.0E30)
2020-05-26 20:39:54,903 TRACE org.apache.calcite.plan.RelOptPlanner [main] Importance of [rel#39:Subset#0.NONE.[]] is 0.0
2020-05-26 20:39:54,903 TRACE org.apache.calcite.plan.RelOptPlanner [main] Importance of [rel#41:Subset#1.NONE.[]] is 0.0
2020-05-26 20:39:54,903 TRACE org.apache.calcite.plan.RelOptPlanner [main] OPTIMIZE Rule-match queued: rule [AggregateExpandDistinctAggregatesRule] rels [#40]
2020-05-26 20:39:54,903 TRACE org.apache.calcite.plan.RelOptPlanner [main] OPTIMIZE Rule-match queued: rule [AggregatePullUpConstantsRule] rels [#40,#27]
2020-05-26 20:39:54,903 TRACE org.apache.calcite.plan.RelOptPlanner [main] OPTIMIZE Rule-match queued: rule [EnumerableAggregateRule(in:NONE,out:ENUMERABLE)] rels [#40]
2020-05-26 20:39:54,903 TRACE org.apache.calcite.plan.RelOptPlanner [main] Importance of [rel#41:Subset#1.NONE.[]] is 1.0
2020-05-26 20:39:54,903 TRACE org.apache.calcite.plan.RelOptPlanner [main] new LogicalAggregate#42
2020-05-26 20:39:54,903 TRACE org.apache.calcite.plan.RelOptPlanner [main] Register: rel#42 is equivalent to rel#40:LogicalAggregate.NONE.[](input=RelSubset#39,group={},EXPR$0=COUNT())
2020-05-26 20:39:54,903 TRACE org.apache.calcite.plan.RelOptPlanner [main] new RelSubset#43
2020-05-26 20:39:54,904 TRACE org.apache.calcite.plan.RelOptPlanner [main] new AbstractConverter#44
2020-05-26 20:39:54,904 TRACE org.apache.calcite.plan.RelOptPlanner [main] Register rel#44:AbstractConverter.ENUMERABLE.[](input=RelSubset#41,convention=ENUMERABLE,sort=[]) in rel#43:Subset#1.ENUMERABLE.[]
2020-05-26 20:39:54,904 TRACE org.apache.calcite.plan.RelOptPlanner [main] Importance of [rel#41:Subset#1.NONE.[]] to its parent [rel#43:Subset#1.ENUMERABLE.[]] is 0.495 (parent importance=0.5, child cost=1.0E30, parent cost=1.0E30)
2020-05-26 20:39:54,904 TRACE org.apache.calcite.plan.RelOptPlanner [main] Importance of [rel#41:Subset#1.NONE.[]] is 0.495
2020-05-26 20:39:54,904 TRACE org.apache.calcite.plan.RelOptPlanner [main] Importance of [rel#43:Subset#1.ENUMERABLE.[]] is 1.0
2020-05-26 20:39:54,905 TRACE org.apache.calcite.plan.RelOptPlanner [main] OPTIMIZE Rule-match queued: rule [ExpandConversionRule] rels [#44]
2020-05-26 20:39:54,905 DEBUG org.apache.calcite.plan.RelOptPlanner [main] PLANNER = org.apache.calcite.plan.volcano.VolcanoPlanner@1f77b5cc; TICK = 1/1; PHASE = PRE_PROCESS_MDR; COST = {inf}
2020-05-26 20:39:54,906 TRACE org.apache.calcite.plan.RelOptPlanner [main] Root: rel#43:Subset#1.ENUMERABLE.[]
Original rel:
LogicalAggregate(group=[{}], EXPR$0=[COUNT()]): rowcount = 10.0, cumulative cost = {111.25 rows, 101.0 cpu, 0.0 io}, id = 38
  LogicalTableScan(table=[[adhoc, NATION]]): rowcount = 100.0, cumulative cost = {100.0 rows, 101.0 cpu, 0.0 io}, id = 27

Sets:
Set#0, type: RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)
	rel#39:Subset#0.NONE.[], best=null, importance=0.81
		rel#27:LogicalTableScan.NONE.[](table=[adhoc, NATION]), rowcount=100.0, cumulative cost={inf}
Set#1, type: RecordType(BIGINT EXPR$0)
	rel#41:Subset#1.NONE.[], best=null, importance=0.9
		rel#40:LogicalAggregate.NONE.[](input=RelSubset#39,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={inf}
	rel#43:Subset#1.ENUMERABLE.[], best=null, importance=1.0
		rel#44:AbstractConverter.ENUMERABLE.[](input=RelSubset#41,convention=ENUMERABLE,sort=[]), rowcount=10.0, cumulative cost={inf}

Graphviz:
digraph G {
	root [style=filled,label="Root"];
	subgraph cluster0{
		label="Set 0 RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)";
		rel27 [label="rel#27:LogicalTableScan\ntable=[adhoc, NATION]\nrows=100.0, cost={inf}",shape=box]
		subset39 [label="rel#39:Subset#0.NONE.[]"]
	}
	subgraph cluster1{
		label="Set 1 RecordType(BIGINT EXPR$0)";
		rel40 [label="rel#40:LogicalAggregate\ninput=RelSubset#39,group={},EXPR$0=COUNT()\nrows=10.0, cost={inf}",shape=box]
		rel44 [label="rel#44:AbstractConverter\ninput=RelSubset#41,convention=ENUMERABLE,sort=[]\nrows=10.0, cost={inf}",shape=box]
		subset41 [label="rel#41:Subset#1.NONE.[]"]
		subset43 [label="rel#43:Subset#1.ENUMERABLE.[]",color=red]
	}
	root -> subset43;
	subset39 -> rel27;
	subset41 -> rel40; rel40 -> subset39;
	subset43 -> rel44; rel44 -> subset41;
}Importances: { rel#43:Subset#1.ENUMERABLE.[]=1.0 rel#41:Subset#1.NONE.[]=0.9 rel#39:Subset#0.NONE.[]=0.81}

2020-05-26 20:39:54,907 DEBUG org.apache.calcite.plan.RelOptPlanner [main] PLANNER = org.apache.calcite.plan.volcano.VolcanoPlanner@1f77b5cc; TICK = 2/1; PHASE = PRE_PROCESS; COST = {inf}
2020-05-26 20:39:54,909 TRACE org.apache.calcite.plan.RelOptPlanner [main] Root: rel#43:Subset#1.ENUMERABLE.[]
Original rel:
LogicalAggregate(group=[{}], EXPR$0=[COUNT()]): rowcount = 10.0, cumulative cost = {111.25 rows, 101.0 cpu, 0.0 io}, id = 38
  LogicalTableScan(table=[[adhoc, NATION]]): rowcount = 100.0, cumulative cost = {100.0 rows, 101.0 cpu, 0.0 io}, id = 27

Sets:
Set#0, type: RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)
	rel#39:Subset#0.NONE.[], best=null, importance=0.81
		rel#27:LogicalTableScan.NONE.[](table=[adhoc, NATION]), rowcount=100.0, cumulative cost={inf}
Set#1, type: RecordType(BIGINT EXPR$0)
	rel#41:Subset#1.NONE.[], best=null, importance=0.9
		rel#40:LogicalAggregate.NONE.[](input=RelSubset#39,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={inf}
	rel#43:Subset#1.ENUMERABLE.[], best=null, importance=1.0
		rel#44:AbstractConverter.ENUMERABLE.[](input=RelSubset#41,convention=ENUMERABLE,sort=[]), rowcount=10.0, cumulative cost={inf}

Graphviz:
digraph G {
	root [style=filled,label="Root"];
	subgraph cluster0{
		label="Set 0 RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)";
		rel27 [label="rel#27:LogicalTableScan\ntable=[adhoc, NATION]\nrows=100.0, cost={inf}",shape=box]
		subset39 [label="rel#39:Subset#0.NONE.[]"]
	}
	subgraph cluster1{
		label="Set 1 RecordType(BIGINT EXPR$0)";
		rel40 [label="rel#40:LogicalAggregate\ninput=RelSubset#39,group={},EXPR$0=COUNT()\nrows=10.0, cost={inf}",shape=box]
		rel44 [label="rel#44:AbstractConverter\ninput=RelSubset#41,convention=ENUMERABLE,sort=[]\nrows=10.0, cost={inf}",shape=box]
		subset41 [label="rel#41:Subset#1.NONE.[]"]
		subset43 [label="rel#43:Subset#1.ENUMERABLE.[]",color=red]
	}
	root -> subset43;
	subset39 -> rel27;
	subset41 -> rel40; rel40 -> subset39;
	subset43 -> rel44; rel44 -> subset41;
}Importances: { rel#43:Subset#1.ENUMERABLE.[]=1.0 rel#41:Subset#1.NONE.[]=0.9 rel#39:Subset#0.NONE.[]=0.81}

2020-05-26 20:39:54,910 DEBUG org.apache.calcite.plan.RelOptPlanner [main] PLANNER = org.apache.calcite.plan.volcano.VolcanoPlanner@1f77b5cc; TICK = 3/1; PHASE = OPTIMIZE; COST = {inf}
2020-05-26 20:39:54,912 TRACE org.apache.calcite.plan.RelOptPlanner [main] Root: rel#43:Subset#1.ENUMERABLE.[]
Original rel:
LogicalAggregate(group=[{}], EXPR$0=[COUNT()]): rowcount = 10.0, cumulative cost = {111.25 rows, 101.0 cpu, 0.0 io}, id = 38
  LogicalTableScan(table=[[adhoc, NATION]]): rowcount = 100.0, cumulative cost = {100.0 rows, 101.0 cpu, 0.0 io}, id = 27

Sets:
Set#0, type: RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)
	rel#39:Subset#0.NONE.[], best=null, importance=0.81
		rel#27:LogicalTableScan.NONE.[](table=[adhoc, NATION]), rowcount=100.0, cumulative cost={inf}
Set#1, type: RecordType(BIGINT EXPR$0)
	rel#41:Subset#1.NONE.[], best=null, importance=0.9
		rel#40:LogicalAggregate.NONE.[](input=RelSubset#39,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={inf}
	rel#43:Subset#1.ENUMERABLE.[], best=null, importance=1.0
		rel#44:AbstractConverter.ENUMERABLE.[](input=RelSubset#41,convention=ENUMERABLE,sort=[]), rowcount=10.0, cumulative cost={inf}

Graphviz:
digraph G {
	root [style=filled,label="Root"];
	subgraph cluster0{
		label="Set 0 RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)";
		rel27 [label="rel#27:LogicalTableScan\ntable=[adhoc, NATION]\nrows=100.0, cost={inf}",shape=box]
		subset39 [label="rel#39:Subset#0.NONE.[]"]
	}
	subgraph cluster1{
		label="Set 1 RecordType(BIGINT EXPR$0)";
		rel40 [label="rel#40:LogicalAggregate\ninput=RelSubset#39,group={},EXPR$0=COUNT()\nrows=10.0, cost={inf}",shape=box]
		rel44 [label="rel#44:AbstractConverter\ninput=RelSubset#41,convention=ENUMERABLE,sort=[]\nrows=10.0, cost={inf}",shape=box]
		subset41 [label="rel#41:Subset#1.NONE.[]"]
		subset43 [label="rel#43:Subset#1.ENUMERABLE.[]",color=red]
	}
	root -> subset43;
	subset39 -> rel27;
	subset41 -> rel40; rel40 -> subset39;
	subset43 -> rel44; rel44 -> subset41;
}Importances: { rel#43:Subset#1.ENUMERABLE.[]=1.0 rel#41:Subset#1.NONE.[]=0.9 rel#39:Subset#0.NONE.[]=0.81}

2020-05-26 20:39:54,913 TRACE org.apache.calcite.plan.RelOptPlanner [main] Sorted rule queue:
rule [ExpandConversionRule] rels [#44] importance 1.0
rule [EnumerableAggregateRule(in:NONE,out:ENUMERABLE)] rels [#40] importance 1.0
rule [AggregatePullUpConstantsRule] rels [#40,#27] importance 0.9
rule [AggregateExpandDistinctAggregatesRule] rels [#40] importance 0.9
rule [BindableTableScanRule] rels [#27] importance 0.81
rule [EnumerableTableScanRule(in:NONE,out:ENUMERABLE)] rels [#27] importance 0.81
2020-05-26 20:39:54,913 DEBUG org.apache.calcite.plan.RelOptPlanner [main] Pop match: rule [ExpandConversionRule] rels [#44]
2020-05-26 20:39:54,913 DEBUG org.apache.calcite.plan.RelOptPlanner [main] call#173: Apply rule [ExpandConversionRule] to [rel#44:AbstractConverter.ENUMERABLE.[](input=RelSubset#41,convention=ENUMERABLE,sort=[])]
2020-05-26 20:39:54,913 DEBUG org.apache.calcite.plan.RelOptPlanner [main] call#173 generated 0 successors.
2020-05-26 20:39:54,913 DEBUG org.apache.calcite.plan.RelOptPlanner [main] PLANNER = org.apache.calcite.plan.volcano.VolcanoPlanner@1f77b5cc; TICK = 4/2; PHASE = OPTIMIZE; COST = {inf}
2020-05-26 20:39:54,916 TRACE org.apache.calcite.plan.RelOptPlanner [main] Root: rel#43:Subset#1.ENUMERABLE.[]
Original rel:
LogicalAggregate(group=[{}], EXPR$0=[COUNT()]): rowcount = 10.0, cumulative cost = {111.25 rows, 101.0 cpu, 0.0 io}, id = 38
  LogicalTableScan(table=[[adhoc, NATION]]): rowcount = 100.0, cumulative cost = {100.0 rows, 101.0 cpu, 0.0 io}, id = 27

Sets:
Set#0, type: RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)
	rel#39:Subset#0.NONE.[], best=null, importance=0.81
		rel#27:LogicalTableScan.NONE.[](table=[adhoc, NATION]), rowcount=100.0, cumulative cost={inf}
Set#1, type: RecordType(BIGINT EXPR$0)
	rel#41:Subset#1.NONE.[], best=null, importance=0.9
		rel#40:LogicalAggregate.NONE.[](input=RelSubset#39,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={inf}
	rel#43:Subset#1.ENUMERABLE.[], best=null, importance=1.0
		rel#44:AbstractConverter.ENUMERABLE.[](input=RelSubset#41,convention=ENUMERABLE,sort=[]), rowcount=10.0, cumulative cost={inf}

Graphviz:
digraph G {
	root [style=filled,label="Root"];
	subgraph cluster0{
		label="Set 0 RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)";
		rel27 [label="rel#27:LogicalTableScan\ntable=[adhoc, NATION]\nrows=100.0, cost={inf}",shape=box]
		subset39 [label="rel#39:Subset#0.NONE.[]"]
	}
	subgraph cluster1{
		label="Set 1 RecordType(BIGINT EXPR$0)";
		rel40 [label="rel#40:LogicalAggregate\ninput=RelSubset#39,group={},EXPR$0=COUNT()\nrows=10.0, cost={inf}",shape=box]
		rel44 [label="rel#44:AbstractConverter\ninput=RelSubset#41,convention=ENUMERABLE,sort=[]\nrows=10.0, cost={inf}",shape=box]
		subset41 [label="rel#41:Subset#1.NONE.[]"]
		subset43 [label="rel#43:Subset#1.ENUMERABLE.[]",color=red]
	}
	root -> subset43;
	subset39 -> rel27;
	subset41 -> rel40; rel40 -> subset39;
	subset43 -> rel44; rel44 -> subset41;
}Importances: { rel#43:Subset#1.ENUMERABLE.[]=1.0 rel#41:Subset#1.NONE.[]=0.9 rel#39:Subset#0.NONE.[]=0.81}

2020-05-26 20:39:54,917 TRACE org.apache.calcite.plan.RelOptPlanner [main] Sorted rule queue:
rule [EnumerableAggregateRule(in:NONE,out:ENUMERABLE)] rels [#40] importance 1.0
rule [AggregatePullUpConstantsRule] rels [#40,#27] importance 0.9
rule [AggregateExpandDistinctAggregatesRule] rels [#40] importance 0.9
rule [BindableTableScanRule] rels [#27] importance 0.81
rule [EnumerableTableScanRule(in:NONE,out:ENUMERABLE)] rels [#27] importance 0.81
2020-05-26 20:39:54,917 DEBUG org.apache.calcite.plan.RelOptPlanner [main] Pop match: rule [EnumerableAggregateRule(in:NONE,out:ENUMERABLE)] rels [#40]
2020-05-26 20:39:54,917 DEBUG org.apache.calcite.plan.RelOptPlanner [main] call#158: Apply rule [EnumerableAggregateRule(in:NONE,out:ENUMERABLE)] to [rel#40:LogicalAggregate.NONE.[](input=RelSubset#39,group={},EXPR$0=COUNT())]
2020-05-26 20:39:54,917 TRACE org.apache.calcite.plan.RelOptPlanner [main] new RelSubset#45
2020-05-26 20:39:54,917 TRACE org.apache.calcite.plan.RelOptPlanner [main] new EnumerableAggregate#46
2020-05-26 20:39:54,917 DEBUG org.apache.calcite.plan.RelOptPlanner [main] Transform to: rel#46 via EnumerableAggregateRule(in:NONE,out:ENUMERABLE)
2020-05-26 20:39:54,917 TRACE org.apache.calcite.plan.RelOptPlanner [main] call#158: Rule EnumerableAggregateRule(in:NONE,out:ENUMERABLE) arguments [rel#40:LogicalAggregate.NONE.[](input=RelSubset#39,group={},EXPR$0=COUNT())] created rel#46:EnumerableAggregate
2020-05-26 20:39:54,918 TRACE org.apache.calcite.plan.RelOptPlanner [main] Register rel#46:EnumerableAggregate.ENUMERABLE.[](input=RelSubset#45,group={},EXPR$0=COUNT()) in rel#43:Subset#1.ENUMERABLE.[]
2020-05-26 20:39:54,918 TRACE org.apache.calcite.plan.RelOptPlanner [main] Importance of [rel#43:Subset#1.ENUMERABLE.[]] is 1.0
2020-05-26 20:39:54,918 DEBUG org.apache.calcite.plan.RelOptPlanner [main] call#158 generated 1 successors: [rel#46:EnumerableAggregate.ENUMERABLE.[](input=RelSubset#45,group={},EXPR$0=COUNT())]
2020-05-26 20:39:54,918 DEBUG org.apache.calcite.plan.RelOptPlanner [main] PLANNER = org.apache.calcite.plan.volcano.VolcanoPlanner@1f77b5cc; TICK = 5/3; PHASE = OPTIMIZE; COST = {inf}
2020-05-26 20:39:54,920 TRACE org.apache.calcite.plan.RelOptPlanner [main] Root: rel#43:Subset#1.ENUMERABLE.[]
Original rel:
LogicalAggregate(group=[{}], EXPR$0=[COUNT()]): rowcount = 10.0, cumulative cost = {111.25 rows, 101.0 cpu, 0.0 io}, id = 38
  LogicalTableScan(table=[[adhoc, NATION]]): rowcount = 100.0, cumulative cost = {100.0 rows, 101.0 cpu, 0.0 io}, id = 27

Sets:
Set#0, type: RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)
	rel#39:Subset#0.NONE.[], best=null, importance=0.81
		rel#27:LogicalTableScan.NONE.[](table=[adhoc, NATION]), rowcount=100.0, cumulative cost={inf}
	rel#45:Subset#0.ENUMERABLE.[], best=null, importance=0.405
Set#1, type: RecordType(BIGINT EXPR$0)
	rel#41:Subset#1.NONE.[], best=null, importance=0.9
		rel#40:LogicalAggregate.NONE.[](input=RelSubset#39,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={inf}
	rel#43:Subset#1.ENUMERABLE.[], best=null, importance=1.0
		rel#44:AbstractConverter.ENUMERABLE.[](input=RelSubset#41,convention=ENUMERABLE,sort=[]), rowcount=10.0, cumulative cost={inf}
		rel#46:EnumerableAggregate.ENUMERABLE.[](input=RelSubset#45,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={inf}

Graphviz:
digraph G {
	root [style=filled,label="Root"];
	subgraph cluster0{
		label="Set 0 RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)";
		rel27 [label="rel#27:LogicalTableScan\ntable=[adhoc, NATION]\nrows=100.0, cost={inf}",shape=box]
		subset39 [label="rel#39:Subset#0.NONE.[]"]
		subset45 [label="rel#45:Subset#0.ENUMERABLE.[]",color=red]
	}
	subgraph cluster1{
		label="Set 1 RecordType(BIGINT EXPR$0)";
		rel40 [label="rel#40:LogicalAggregate\ninput=RelSubset#39,group={},EXPR$0=COUNT()\nrows=10.0, cost={inf}",shape=box]
		rel44 [label="rel#44:AbstractConverter\ninput=RelSubset#41,convention=ENUMERABLE,sort=[]\nrows=10.0, cost={inf}",shape=box]
		rel46 [label="rel#46:EnumerableAggregate\ninput=RelSubset#45,group={},EXPR$0=COUNT()\nrows=10.0, cost={inf}",shape=box]
		subset41 [label="rel#41:Subset#1.NONE.[]"]
		subset43 [label="rel#43:Subset#1.ENUMERABLE.[]"]
	}
	root -> subset43;
	subset39 -> rel27;
	subset41 -> rel40; rel40 -> subset39;
	subset43 -> rel44; rel44 -> subset41;
	subset43 -> rel46; rel46 -> subset45;
}Importances: { rel#43:Subset#1.ENUMERABLE.[]=1.0 rel#41:Subset#1.NONE.[]=0.9 rel#39:Subset#0.NONE.[]=0.81}

2020-05-26 20:39:54,920 TRACE org.apache.calcite.plan.RelOptPlanner [main] Sorted rule queue:
rule [AggregatePullUpConstantsRule] rels [#40,#27] importance 0.9
rule [AggregateExpandDistinctAggregatesRule] rels [#40] importance 0.9
rule [BindableTableScanRule] rels [#27] importance 0.81
rule [EnumerableTableScanRule(in:NONE,out:ENUMERABLE)] rels [#27] importance 0.81
2020-05-26 20:39:54,920 DEBUG org.apache.calcite.plan.RelOptPlanner [main] Pop match: rule [AggregatePullUpConstantsRule] rels [#40,#27]
2020-05-26 20:39:54,920 DEBUG org.apache.calcite.plan.RelOptPlanner [main] call#147: Apply rule [AggregatePullUpConstantsRule] to [rel#40:LogicalAggregate.NONE.[](input=RelSubset#39,group={},EXPR$0=COUNT()), rel#27:LogicalTableScan.NONE.[](table=[adhoc, NATION])]
2020-05-26 20:39:54,920 DEBUG org.apache.calcite.plan.RelOptPlanner [main] call#147 generated 0 successors.
2020-05-26 20:39:54,920 DEBUG org.apache.calcite.plan.RelOptPlanner [main] PLANNER = org.apache.calcite.plan.volcano.VolcanoPlanner@1f77b5cc; TICK = 6/4; PHASE = OPTIMIZE; COST = {inf}
2020-05-26 20:39:54,922 TRACE org.apache.calcite.plan.RelOptPlanner [main] Root: rel#43:Subset#1.ENUMERABLE.[]
Original rel:
LogicalAggregate(group=[{}], EXPR$0=[COUNT()]): rowcount = 10.0, cumulative cost = {111.25 rows, 101.0 cpu, 0.0 io}, id = 38
  LogicalTableScan(table=[[adhoc, NATION]]): rowcount = 100.0, cumulative cost = {100.0 rows, 101.0 cpu, 0.0 io}, id = 27

Sets:
Set#0, type: RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)
	rel#39:Subset#0.NONE.[], best=null, importance=0.81
		rel#27:LogicalTableScan.NONE.[](table=[adhoc, NATION]), rowcount=100.0, cumulative cost={inf}
	rel#45:Subset#0.ENUMERABLE.[], best=null, importance=0.405
Set#1, type: RecordType(BIGINT EXPR$0)
	rel#41:Subset#1.NONE.[], best=null, importance=0.9
		rel#40:LogicalAggregate.NONE.[](input=RelSubset#39,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={inf}
	rel#43:Subset#1.ENUMERABLE.[], best=null, importance=1.0
		rel#44:AbstractConverter.ENUMERABLE.[](input=RelSubset#41,convention=ENUMERABLE,sort=[]), rowcount=10.0, cumulative cost={inf}
		rel#46:EnumerableAggregate.ENUMERABLE.[](input=RelSubset#45,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={inf}

Graphviz:
digraph G {
	root [style=filled,label="Root"];
	subgraph cluster0{
		label="Set 0 RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)";
		rel27 [label="rel#27:LogicalTableScan\ntable=[adhoc, NATION]\nrows=100.0, cost={inf}",shape=box]
		subset39 [label="rel#39:Subset#0.NONE.[]"]
		subset45 [label="rel#45:Subset#0.ENUMERABLE.[]",color=red]
	}
	subgraph cluster1{
		label="Set 1 RecordType(BIGINT EXPR$0)";
		rel40 [label="rel#40:LogicalAggregate\ninput=RelSubset#39,group={},EXPR$0=COUNT()\nrows=10.0, cost={inf}",shape=box]
		rel44 [label="rel#44:AbstractConverter\ninput=RelSubset#41,convention=ENUMERABLE,sort=[]\nrows=10.0, cost={inf}",shape=box]
		rel46 [label="rel#46:EnumerableAggregate\ninput=RelSubset#45,group={},EXPR$0=COUNT()\nrows=10.0, cost={inf}",shape=box]
		subset41 [label="rel#41:Subset#1.NONE.[]"]
		subset43 [label="rel#43:Subset#1.ENUMERABLE.[]"]
	}
	root -> subset43;
	subset39 -> rel27;
	subset41 -> rel40; rel40 -> subset39;
	subset43 -> rel44; rel44 -> subset41;
	subset43 -> rel46; rel46 -> subset45;
}Importances: { rel#43:Subset#1.ENUMERABLE.[]=1.0 rel#41:Subset#1.NONE.[]=0.9 rel#39:Subset#0.NONE.[]=0.81}

2020-05-26 20:39:54,922 TRACE org.apache.calcite.plan.RelOptPlanner [main] Sorted rule queue:
rule [AggregateExpandDistinctAggregatesRule] rels [#40] importance 0.9
rule [BindableTableScanRule] rels [#27] importance 0.81
rule [EnumerableTableScanRule(in:NONE,out:ENUMERABLE)] rels [#27] importance 0.81
2020-05-26 20:39:54,922 DEBUG org.apache.calcite.plan.RelOptPlanner [main] Pop match: rule [AggregateExpandDistinctAggregatesRule] rels [#40]
2020-05-26 20:39:54,922 DEBUG org.apache.calcite.plan.RelOptPlanner [main] call#133: Apply rule [AggregateExpandDistinctAggregatesRule] to [rel#40:LogicalAggregate.NONE.[](input=RelSubset#39,group={},EXPR$0=COUNT())]
2020-05-26 20:39:54,922 DEBUG org.apache.calcite.plan.RelOptPlanner [main] call#133 generated 0 successors.
2020-05-26 20:39:54,922 DEBUG org.apache.calcite.plan.RelOptPlanner [main] PLANNER = org.apache.calcite.plan.volcano.VolcanoPlanner@1f77b5cc; TICK = 7/5; PHASE = OPTIMIZE; COST = {inf}
2020-05-26 20:39:54,924 TRACE org.apache.calcite.plan.RelOptPlanner [main] Root: rel#43:Subset#1.ENUMERABLE.[]
Original rel:
LogicalAggregate(group=[{}], EXPR$0=[COUNT()]): rowcount = 10.0, cumulative cost = {111.25 rows, 101.0 cpu, 0.0 io}, id = 38
  LogicalTableScan(table=[[adhoc, NATION]]): rowcount = 100.0, cumulative cost = {100.0 rows, 101.0 cpu, 0.0 io}, id = 27

Sets:
Set#0, type: RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)
	rel#39:Subset#0.NONE.[], best=null, importance=0.81
		rel#27:LogicalTableScan.NONE.[](table=[adhoc, NATION]), rowcount=100.0, cumulative cost={inf}
	rel#45:Subset#0.ENUMERABLE.[], best=null, importance=0.405
Set#1, type: RecordType(BIGINT EXPR$0)
	rel#41:Subset#1.NONE.[], best=null, importance=0.9
		rel#40:LogicalAggregate.NONE.[](input=RelSubset#39,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={inf}
	rel#43:Subset#1.ENUMERABLE.[], best=null, importance=1.0
		rel#44:AbstractConverter.ENUMERABLE.[](input=RelSubset#41,convention=ENUMERABLE,sort=[]), rowcount=10.0, cumulative cost={inf}
		rel#46:EnumerableAggregate.ENUMERABLE.[](input=RelSubset#45,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={inf}

Graphviz:
digraph G {
	root [style=filled,label="Root"];
	subgraph cluster0{
		label="Set 0 RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)";
		rel27 [label="rel#27:LogicalTableScan\ntable=[adhoc, NATION]\nrows=100.0, cost={inf}",shape=box]
		subset39 [label="rel#39:Subset#0.NONE.[]"]
		subset45 [label="rel#45:Subset#0.ENUMERABLE.[]",color=red]
	}
	subgraph cluster1{
		label="Set 1 RecordType(BIGINT EXPR$0)";
		rel40 [label="rel#40:LogicalAggregate\ninput=RelSubset#39,group={},EXPR$0=COUNT()\nrows=10.0, cost={inf}",shape=box]
		rel44 [label="rel#44:AbstractConverter\ninput=RelSubset#41,convention=ENUMERABLE,sort=[]\nrows=10.0, cost={inf}",shape=box]
		rel46 [label="rel#46:EnumerableAggregate\ninput=RelSubset#45,group={},EXPR$0=COUNT()\nrows=10.0, cost={inf}",shape=box]
		subset41 [label="rel#41:Subset#1.NONE.[]"]
		subset43 [label="rel#43:Subset#1.ENUMERABLE.[]"]
	}
	root -> subset43;
	subset39 -> rel27;
	subset41 -> rel40; rel40 -> subset39;
	subset43 -> rel44; rel44 -> subset41;
	subset43 -> rel46; rel46 -> subset45;
}Importances: { rel#43:Subset#1.ENUMERABLE.[]=1.0 rel#41:Subset#1.NONE.[]=0.9 rel#39:Subset#0.NONE.[]=0.81}

2020-05-26 20:39:54,924 TRACE org.apache.calcite.plan.RelOptPlanner [main] Sorted rule queue:
rule [BindableTableScanRule] rels [#27] importance 0.81
rule [EnumerableTableScanRule(in:NONE,out:ENUMERABLE)] rels [#27] importance 0.81
2020-05-26 20:39:54,924 DEBUG org.apache.calcite.plan.RelOptPlanner [main] Pop match: rule [BindableTableScanRule] rels [#27]
2020-05-26 20:39:54,924 DEBUG org.apache.calcite.plan.RelOptPlanner [main] call#125: Apply rule [BindableTableScanRule] to [rel#27:LogicalTableScan.NONE.[](table=[adhoc, NATION])]
2020-05-26 20:39:54,925 DEBUG org.apache.calcite.plan.RelOptPlanner [main] call#125 generated 0 successors.
2020-05-26 20:39:54,925 DEBUG org.apache.calcite.plan.RelOptPlanner [main] PLANNER = org.apache.calcite.plan.volcano.VolcanoPlanner@1f77b5cc; TICK = 8/6; PHASE = OPTIMIZE; COST = {inf}
2020-05-26 20:39:54,926 TRACE org.apache.calcite.plan.RelOptPlanner [main] Root: rel#43:Subset#1.ENUMERABLE.[]
Original rel:
LogicalAggregate(group=[{}], EXPR$0=[COUNT()]): rowcount = 10.0, cumulative cost = {111.25 rows, 101.0 cpu, 0.0 io}, id = 38
  LogicalTableScan(table=[[adhoc, NATION]]): rowcount = 100.0, cumulative cost = {100.0 rows, 101.0 cpu, 0.0 io}, id = 27

Sets:
Set#0, type: RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)
	rel#39:Subset#0.NONE.[], best=null, importance=0.81
		rel#27:LogicalTableScan.NONE.[](table=[adhoc, NATION]), rowcount=100.0, cumulative cost={inf}
	rel#45:Subset#0.ENUMERABLE.[], best=null, importance=0.405
Set#1, type: RecordType(BIGINT EXPR$0)
	rel#41:Subset#1.NONE.[], best=null, importance=0.9
		rel#40:LogicalAggregate.NONE.[](input=RelSubset#39,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={inf}
	rel#43:Subset#1.ENUMERABLE.[], best=null, importance=1.0
		rel#44:AbstractConverter.ENUMERABLE.[](input=RelSubset#41,convention=ENUMERABLE,sort=[]), rowcount=10.0, cumulative cost={inf}
		rel#46:EnumerableAggregate.ENUMERABLE.[](input=RelSubset#45,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={inf}

Graphviz:
digraph G {
	root [style=filled,label="Root"];
	subgraph cluster0{
		label="Set 0 RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)";
		rel27 [label="rel#27:LogicalTableScan\ntable=[adhoc, NATION]\nrows=100.0, cost={inf}",shape=box]
		subset39 [label="rel#39:Subset#0.NONE.[]"]
		subset45 [label="rel#45:Subset#0.ENUMERABLE.[]",color=red]
	}
	subgraph cluster1{
		label="Set 1 RecordType(BIGINT EXPR$0)";
		rel40 [label="rel#40:LogicalAggregate\ninput=RelSubset#39,group={},EXPR$0=COUNT()\nrows=10.0, cost={inf}",shape=box]
		rel44 [label="rel#44:AbstractConverter\ninput=RelSubset#41,convention=ENUMERABLE,sort=[]\nrows=10.0, cost={inf}",shape=box]
		rel46 [label="rel#46:EnumerableAggregate\ninput=RelSubset#45,group={},EXPR$0=COUNT()\nrows=10.0, cost={inf}",shape=box]
		subset41 [label="rel#41:Subset#1.NONE.[]"]
		subset43 [label="rel#43:Subset#1.ENUMERABLE.[]"]
	}
	root -> subset43;
	subset39 -> rel27;
	subset41 -> rel40; rel40 -> subset39;
	subset43 -> rel44; rel44 -> subset41;
	subset43 -> rel46; rel46 -> subset45;
}Importances: { rel#43:Subset#1.ENUMERABLE.[]=1.0 rel#41:Subset#1.NONE.[]=0.9 rel#39:Subset#0.NONE.[]=0.81}

2020-05-26 20:39:54,926 TRACE org.apache.calcite.plan.RelOptPlanner [main] Sorted rule queue:
rule [EnumerableTableScanRule(in:NONE,out:ENUMERABLE)] rels [#27] importance 0.81
2020-05-26 20:39:54,926 DEBUG org.apache.calcite.plan.RelOptPlanner [main] Pop match: rule [EnumerableTableScanRule(in:NONE,out:ENUMERABLE)] rels [#27]
2020-05-26 20:39:54,926 DEBUG org.apache.calcite.plan.RelOptPlanner [main] call#109: Apply rule [EnumerableTableScanRule(in:NONE,out:ENUMERABLE)] to [rel#27:LogicalTableScan.NONE.[](table=[adhoc, NATION])]
2020-05-26 20:39:54,927 TRACE org.apache.calcite.plan.RelOptPlanner [main] new EnumerableTableScan#47
2020-05-26 20:39:54,927 DEBUG org.apache.calcite.plan.RelOptPlanner [main] Transform to: rel#47 via EnumerableTableScanRule(in:NONE,out:ENUMERABLE)
2020-05-26 20:39:54,927 TRACE org.apache.calcite.plan.RelOptPlanner [main] call#109: Rule EnumerableTableScanRule(in:NONE,out:ENUMERABLE) arguments [rel#27:LogicalTableScan.NONE.[](table=[adhoc, NATION])] created rel#47:EnumerableTableScan
2020-05-26 20:39:54,927 TRACE org.apache.calcite.plan.RelOptPlanner [main] Subset cost changed: subset [rel#45:Subset#0.ENUMERABLE.[]] cost was {inf} now {100.0 rows, 101.0 cpu, 0.0 io}
2020-05-26 20:39:54,927 TRACE org.apache.calcite.plan.RelOptPlanner [main] Subset cost changed: subset [rel#43:Subset#1.ENUMERABLE.[]] cost was {inf} now {111.25 rows, 101.0 cpu, 0.0 io}
2020-05-26 20:39:54,927 TRACE org.apache.calcite.plan.RelOptPlanner [main] Importance of [rel#43:Subset#1.ENUMERABLE.[]] is 1.0
2020-05-26 20:39:54,927 TRACE org.apache.calcite.plan.RelOptPlanner [main] Register rel#47:EnumerableTableScan.ENUMERABLE.[](table=[adhoc, NATION]) in rel#45:Subset#0.ENUMERABLE.[]
2020-05-26 20:39:54,928 TRACE org.apache.calcite.plan.RelOptPlanner [main] Importance of [rel#45:Subset#0.ENUMERABLE.[]] to its parent [rel#43:Subset#1.ENUMERABLE.[]] is 0.9469964664310954 (parent importance=1.0, child cost=201.0, parent cost=212.25)
2020-05-26 20:39:54,928 TRACE org.apache.calcite.plan.RelOptPlanner [main] Importance of [rel#45:Subset#0.ENUMERABLE.[]] is 0.9469964664310954
2020-05-26 20:39:54,928 DEBUG org.apache.calcite.plan.RelOptPlanner [main] call#109 generated 1 successors: [rel#47:EnumerableTableScan.ENUMERABLE.[](table=[adhoc, NATION])]
2020-05-26 20:39:54,928 TRACE org.apache.calcite.plan.RelOptPlanner [main] boostImportance(1.0, [])
2020-05-26 20:39:54,928 DEBUG org.apache.calcite.plan.RelOptPlanner [main] PLANNER = org.apache.calcite.plan.volcano.VolcanoPlanner@1f77b5cc; TICK = 9/7; PHASE = OPTIMIZE; COST = {111.25 rows, 101.0 cpu, 0.0 io}
2020-05-26 20:39:54,929 TRACE org.apache.calcite.plan.RelOptPlanner [main] Root: rel#43:Subset#1.ENUMERABLE.[]
Original rel:
LogicalAggregate(group=[{}], EXPR$0=[COUNT()]): rowcount = 10.0, cumulative cost = {111.25 rows, 101.0 cpu, 0.0 io}, id = 38
  LogicalTableScan(table=[[adhoc, NATION]]): rowcount = 100.0, cumulative cost = {100.0 rows, 101.0 cpu, 0.0 io}, id = 27

Sets:
Set#0, type: RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)
	rel#39:Subset#0.NONE.[], best=null, importance=0.81
		rel#27:LogicalTableScan.NONE.[](table=[adhoc, NATION]), rowcount=100.0, cumulative cost={inf}
	rel#45:Subset#0.ENUMERABLE.[], best=rel#47, importance=0.9469964664310954
		rel#47:EnumerableTableScan.ENUMERABLE.[](table=[adhoc, NATION]), rowcount=100.0, cumulative cost={100.0 rows, 101.0 cpu, 0.0 io}
Set#1, type: RecordType(BIGINT EXPR$0)
	rel#41:Subset#1.NONE.[], best=null, importance=0.9
		rel#40:LogicalAggregate.NONE.[](input=RelSubset#39,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={inf}
	rel#43:Subset#1.ENUMERABLE.[], best=rel#46, importance=1.0
		rel#44:AbstractConverter.ENUMERABLE.[](input=RelSubset#41,convention=ENUMERABLE,sort=[]), rowcount=10.0, cumulative cost={inf}
		rel#46:EnumerableAggregate.ENUMERABLE.[](input=RelSubset#45,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={111.25 rows, 101.0 cpu, 0.0 io}

Graphviz:
digraph G {
	root [style=filled,label="Root"];
	subgraph cluster0{
		label="Set 0 RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)";
		rel27 [label="rel#27:LogicalTableScan\ntable=[adhoc, NATION]\nrows=100.0, cost={inf}",shape=box]
		rel47 [label="rel#47:EnumerableTableScan\ntable=[adhoc, NATION]\nrows=100.0, cost={100.0 rows, 101.0 cpu, 0.0 io}",color=blue,shape=box]
		subset39 [label="rel#39:Subset#0.NONE.[]"]
		subset45 [label="rel#45:Subset#0.ENUMERABLE.[]"]
	}
	subgraph cluster1{
		label="Set 1 RecordType(BIGINT EXPR$0)";
		rel40 [label="rel#40:LogicalAggregate\ninput=RelSubset#39,group={},EXPR$0=COUNT()\nrows=10.0, cost={inf}",shape=box]
		rel44 [label="rel#44:AbstractConverter\ninput=RelSubset#41,convention=ENUMERABLE,sort=[]\nrows=10.0, cost={inf}",shape=box]
		rel46 [label="rel#46:EnumerableAggregate\ninput=RelSubset#45,group={},EXPR$0=COUNT()\nrows=10.0, cost={111.25 rows, 101.0 cpu, 0.0 io}",color=blue,shape=box]
		subset41 [label="rel#41:Subset#1.NONE.[]"]
		subset43 [label="rel#43:Subset#1.ENUMERABLE.[]"]
	}
	root -> subset43;
	subset39 -> rel27;
	subset45 -> rel47[color=blue];
	subset41 -> rel40; rel40 -> subset39;
	subset43 -> rel44; rel44 -> subset41;
	subset43 -> rel46[color=blue]; rel46 -> subset45[color=blue];
}Importances: { rel#43:Subset#1.ENUMERABLE.[]=1.0 rel#45:Subset#0.ENUMERABLE.[]=0.9469964664310954 rel#41:Subset#1.NONE.[]=0.9 rel#39:Subset#0.NONE.[]=0.81}

2020-05-26 20:39:54,929 TRACE org.apache.calcite.plan.RelOptPlanner [main] boostImportance(1.0, [])
2020-05-26 20:39:54,929 DEBUG org.apache.calcite.plan.RelOptPlanner [main] PLANNER = org.apache.calcite.plan.volcano.VolcanoPlanner@1f77b5cc; TICK = 10/1; PHASE = CLEANUP; COST = {111.25 rows, 101.0 cpu, 0.0 io}
2020-05-26 20:39:54,930 TRACE org.apache.calcite.plan.RelOptPlanner [main] Root: rel#43:Subset#1.ENUMERABLE.[]
Original rel:
LogicalAggregate(group=[{}], EXPR$0=[COUNT()]): rowcount = 10.0, cumulative cost = {111.25 rows, 101.0 cpu, 0.0 io}, id = 38
  LogicalTableScan(table=[[adhoc, NATION]]): rowcount = 100.0, cumulative cost = {100.0 rows, 101.0 cpu, 0.0 io}, id = 27

Sets:
Set#0, type: RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)
	rel#39:Subset#0.NONE.[], best=null, importance=0.81
		rel#27:LogicalTableScan.NONE.[](table=[adhoc, NATION]), rowcount=100.0, cumulative cost={inf}
	rel#45:Subset#0.ENUMERABLE.[], best=rel#47, importance=0.9
		rel#47:EnumerableTableScan.ENUMERABLE.[](table=[adhoc, NATION]), rowcount=100.0, cumulative cost={100.0 rows, 101.0 cpu, 0.0 io}
Set#1, type: RecordType(BIGINT EXPR$0)
	rel#41:Subset#1.NONE.[], best=null, importance=0.9
		rel#40:LogicalAggregate.NONE.[](input=RelSubset#39,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={inf}
	rel#43:Subset#1.ENUMERABLE.[], best=rel#46, importance=1.0
		rel#44:AbstractConverter.ENUMERABLE.[](input=RelSubset#41,convention=ENUMERABLE,sort=[]), rowcount=10.0, cumulative cost={inf}
		rel#46:EnumerableAggregate.ENUMERABLE.[](input=RelSubset#45,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={111.25 rows, 101.0 cpu, 0.0 io}

Graphviz:
digraph G {
	root [style=filled,label="Root"];
	subgraph cluster0{
		label="Set 0 RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)";
		rel27 [label="rel#27:LogicalTableScan\ntable=[adhoc, NATION]\nrows=100.0, cost={inf}",shape=box]
		rel47 [label="rel#47:EnumerableTableScan\ntable=[adhoc, NATION]\nrows=100.0, cost={100.0 rows, 101.0 cpu, 0.0 io}",color=blue,shape=box]
		subset39 [label="rel#39:Subset#0.NONE.[]"]
		subset45 [label="rel#45:Subset#0.ENUMERABLE.[]"]
	}
	subgraph cluster1{
		label="Set 1 RecordType(BIGINT EXPR$0)";
		rel40 [label="rel#40:LogicalAggregate\ninput=RelSubset#39,group={},EXPR$0=COUNT()\nrows=10.0, cost={inf}",shape=box]
		rel44 [label="rel#44:AbstractConverter\ninput=RelSubset#41,convention=ENUMERABLE,sort=[]\nrows=10.0, cost={inf}",shape=box]
		rel46 [label="rel#46:EnumerableAggregate\ninput=RelSubset#45,group={},EXPR$0=COUNT()\nrows=10.0, cost={111.25 rows, 101.0 cpu, 0.0 io}",color=blue,shape=box]
		subset41 [label="rel#41:Subset#1.NONE.[]"]
		subset43 [label="rel#43:Subset#1.ENUMERABLE.[]"]
	}
	root -> subset43;
	subset39 -> rel27;
	subset45 -> rel47[color=blue];
	subset41 -> rel40; rel40 -> subset39;
	subset43 -> rel44; rel44 -> subset41;
	subset43 -> rel46[color=blue]; rel46 -> subset45[color=blue];
}Importances: { rel#43:Subset#1.ENUMERABLE.[]=1.0 rel#41:Subset#1.NONE.[]=0.9 rel#45:Subset#0.ENUMERABLE.[]=0.9 rel#39:Subset#0.NONE.[]=0.81}

2020-05-26 20:39:54,931 TRACE org.apache.calcite.plan.RelOptPlanner [main] Root: rel#43:Subset#1.ENUMERABLE.[]
Original rel:
LogicalAggregate(group=[{}], EXPR$0=[COUNT()]): rowcount = 10.0, cumulative cost = {111.25 rows, 101.0 cpu, 0.0 io}, id = 38
  LogicalTableScan(table=[[adhoc, NATION]]): rowcount = 100.0, cumulative cost = {100.0 rows, 101.0 cpu, 0.0 io}, id = 27

Sets:
Set#0, type: RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)
	rel#39:Subset#0.NONE.[], best=null, importance=0.81
		rel#27:LogicalTableScan.NONE.[](table=[adhoc, NATION]), rowcount=100.0, cumulative cost={inf}
	rel#45:Subset#0.ENUMERABLE.[], best=rel#47, importance=0.9
		rel#47:EnumerableTableScan.ENUMERABLE.[](table=[adhoc, NATION]), rowcount=100.0, cumulative cost={100.0 rows, 101.0 cpu, 0.0 io}
Set#1, type: RecordType(BIGINT EXPR$0)
	rel#41:Subset#1.NONE.[], best=null, importance=0.9
		rel#40:LogicalAggregate.NONE.[](input=RelSubset#39,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={inf}
	rel#43:Subset#1.ENUMERABLE.[], best=rel#46, importance=1.0
		rel#44:AbstractConverter.ENUMERABLE.[](input=RelSubset#41,convention=ENUMERABLE,sort=[]), rowcount=10.0, cumulative cost={inf}
		rel#46:EnumerableAggregate.ENUMERABLE.[](input=RelSubset#45,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={111.25 rows, 101.0 cpu, 0.0 io}

Graphviz:
digraph G {
	root [style=filled,label="Root"];
	subgraph cluster0{
		label="Set 0 RecordType(JavaType(class java.lang.Long) N_NATIONKEY, JavaType(class java.lang.String) N_NAME, JavaType(class java.lang.Long) N_REGIONKEY, JavaType(class java.lang.String) N_COMMENT)";
		rel27 [label="rel#27:LogicalTableScan\ntable=[adhoc, NATION]\nrows=100.0, cost={inf}",shape=box]
		rel47 [label="rel#47:EnumerableTableScan\ntable=[adhoc, NATION]\nrows=100.0, cost={100.0 rows, 101.0 cpu, 0.0 io}",color=blue,shape=box]
		subset39 [label="rel#39:Subset#0.NONE.[]"]
		subset45 [label="rel#45:Subset#0.ENUMERABLE.[]"]
	}
	subgraph cluster1{
		label="Set 1 RecordType(BIGINT EXPR$0)";
		rel40 [label="rel#40:LogicalAggregate\ninput=RelSubset#39,group={},EXPR$0=COUNT()\nrows=10.0, cost={inf}",shape=box]
		rel44 [label="rel#44:AbstractConverter\ninput=RelSubset#41,convention=ENUMERABLE,sort=[]\nrows=10.0, cost={inf}",shape=box]
		rel46 [label="rel#46:EnumerableAggregate\ninput=RelSubset#45,group={},EXPR$0=COUNT()\nrows=10.0, cost={111.25 rows, 101.0 cpu, 0.0 io}",color=blue,shape=box]
		subset41 [label="rel#41:Subset#1.NONE.[]"]
		subset43 [label="rel#43:Subset#1.ENUMERABLE.[]"]
	}
	root -> subset43;
	subset39 -> rel27;
	subset45 -> rel47[color=blue];
	subset41 -> rel40; rel40 -> subset39;
	subset43 -> rel44; rel44 -> subset41;
	subset43 -> rel46[color=blue]; rel46 -> subset45[color=blue];
}
2020-05-26 20:39:54,931 TRACE org.apache.calcite.plan.RelOptPlanner [main] new EnumerableAggregate#48
2020-05-26 20:39:54,931 DEBUG org.apache.calcite.plan.RelOptPlanner [main] Cheapest plan:
EnumerableAggregate(group=[{}], EXPR$0=[COUNT()]): rowcount = 10.0, cumulative cost = {111.25 rows, 101.0 cpu, 0.0 io}, id = 48
  EnumerableTableScan(table=[[adhoc, NATION]]): rowcount = 100.0, cumulative cost = {100.0 rows, 101.0 cpu, 0.0 io}, id = 47

2020-05-26 20:39:54,931 DEBUG org.apache.calcite.plan.RelOptPlanner [main] Provenance:
rel#48:EnumerableAggregate#48
  direct
    rel#46:EnumerableAggregate.ENUMERABLE.[](input=RelSubset#45,group={},EXPR$0=COUNT())
      call#158 rule [EnumerableAggregateRule(in:NONE,out:ENUMERABLE)]
        rel#40:LogicalAggregate.NONE.[](input=RelSubset#39,group={},EXPR$0=COUNT())
          no parent
rel#47:EnumerableTableScan.ENUMERABLE.[](table=[adhoc, NATION])
  call#109 rule [EnumerableTableScanRule(in:NONE,out:ENUMERABLE)]
    rel#27:LogicalTableScan.NONE.[](table=[adhoc, NATION])
      no parent

2020-05-26 20:39:54,932 TRACE org.apache.calcite.plan.RelOptPlanner [main] new HepRelVertex#49
2020-05-26 20:39:54,932 TRACE org.apache.calcite.plan.RelOptPlanner [main] new EnumerableAggregate#50
2020-05-26 20:39:54,932 TRACE org.apache.calcite.plan.RelOptPlanner [main] new HepRelVertex#51
2020-05-26 20:39:54,932 TRACE org.apache.calcite.plan.RelOptPlanner [main] 
Breadth-first from root:  {
    rel#51:HepRelVertex#51 = rel#50:EnumerableAggregate.ENUMERABLE.[](input=HepRelVertex#49,group={},EXPR$0=COUNT()), rowcount=10.0, cumulative cost={111.25 rows, 101.0 cpu, 0.0 io}
    rel#49:HepRelVertex#49 = rel#47:EnumerableTableScan.ENUMERABLE.[](table=[adhoc, NATION]), rowcount=100.0, cumulative cost={100.0 rows, 101.0 cpu, 0.0 io}
}
2020-05-26 20:39:54,932 TRACE org.apache.calcite.plan.RelOptPlanner [main] Applying rule set [NoneToBindableConverterRule(in:NONE,out:BINDABLE)]
2020-05-26 20:39:54,932 TRACE org.apache.calcite.plan.RelOptPlanner [main] collecting garbage
2020-05-26 20:39:54,932 TRACE org.apache.calcite.plan.RelOptPlanner [main] Applying rule set [EnumerableCalcRule(in:NONE,out:ENUMERABLE)]
2020-05-26 20:39:54,932 TRACE org.apache.calcite.plan.RelOptPlanner [main] Applying rule set [EnumerableFilterToCalcRule]
2020-05-26 20:39:54,932 TRACE org.apache.calcite.plan.RelOptPlanner [main] Applying rule set [EnumerableProjectToCalcRule]
2020-05-26 20:39:54,932 TRACE org.apache.calcite.plan.RelOptPlanner [main] Applying rule set [CalcMergeRule]
2020-05-26 20:39:54,932 TRACE org.apache.calcite.plan.RelOptPlanner [main] Applying rule set [FilterCalcMergeRule]
2020-05-26 20:39:54,932 TRACE org.apache.calcite.plan.RelOptPlanner [main] Applying rule set [ProjectCalcMergeRule]
2020-05-26 20:39:54,932 TRACE org.apache.calcite.plan.RelOptPlanner [main] Applying rule set [FilterToCalcRule]
2020-05-26 20:39:54,932 TRACE org.apache.calcite.plan.RelOptPlanner [main] Applying rule set [ProjectToCalcRule]
2020-05-26 20:39:54,932 TRACE org.apache.calcite.plan.RelOptPlanner [main] Applying rule set [CalcMergeRule]
2020-05-26 20:39:54,932 TRACE org.apache.calcite.plan.RelOptPlanner [main] Applying rule set [FilterCalcMergeRule]
2020-05-26 20:39:54,932 TRACE org.apache.calcite.plan.RelOptPlanner [main] Applying rule set [ProjectCalcMergeRule]
2020-05-26 20:39:54,932 DEBUG org.apache.calcite.plan.RelOptPlanner [main] For final plan, using rel#50:EnumerableAggregate.ENUMERABLE.[](input=HepRelVertex#49,group={},EXPR$0=COUNT())
2020-05-26 20:39:54,933 DEBUG org.apache.calcite.plan.RelOptPlanner [main] For final plan, using rel#47:EnumerableTableScan.ENUMERABLE.[](table=[adhoc, NATION])
2020-05-26 20:39:54,933 DEBUG org.apache.calcite.prepare.Prepare [main] Plan after physical tweaks: EnumerableAggregate(group=[{}], EXPR$0=[COUNT()]): rowcount = 10.0, cumulative cost = {111.25 rows, 101.0 cpu, 0.0 io}, id = 50
  EnumerableTableScan(table=[[adhoc, NATION]]): rowcount = 100.0, cumulative cost = {100.0 rows, 101.0 cpu, 0.0 io}, id = 47

